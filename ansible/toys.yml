- name: Install Brunos toys
  hosts: "{{ hosts }}"
  tasks:

  - name: "Create {{ ansible_env.HOME }}/bin symlink"
    file:
      path: "{{ ansible_env.HOME }}/bin"
      src: "{{ ansible_env.HOME }}/repos/toys/bin"
      state: link
      force: true

  - name: Install python3
    package:
      name: python3
      state: present
    become: true

  - name: "Check for python symlink"
    stat:
      path: /usr/bin/python
    register: python_stat

  - name: "Create python symlink"
    file:
      path: /usr/bin/python
      src: /usr/bin/python2
      state: link
      force: true
    become: true
    when: not python_stat.stat.exists

  - name: "Check for python2 symlink"
    stat:
      path: /usr/bin/python2
    register: python2_stat

  - name: "Create python2 symlink"
    file:
      path: /usr/bin/python2
      src: /usr/bin/python
      state: link
      force: true
    become: true
    when: not python2_stat.stat.exists

  - name: Install git
    package:
      name: git
      state: present
    become: true

  - name: "Create {{ ansible_env.HOME }}/repos"
    file:
      path: "{{ ansible_env.HOME }}/repos"
      state: directory
      mode: 0755

  - name: "Look for {{ ansible_env.HOME }}/repos/toys"
    stat:
      path: "{{ ansible_env.HOME }}/repos/toys"
    register: toys_stat

  - name: "Clone repo"
    command: 
      cmd: git clone https://github.com/pfuntner/toys.git
      chdir: "{{ ansible_env.HOME }}/repos"
    when: not toys_stat.stat.exists

  - name: "Update repo"
    command: 
      cmd: git pull
      chdir: "{{ ansible_env.HOME }}/repos/toys"
    when: toys_stat.stat.exists

  - name: Peek at home directory
    shell: "ls -a $HOME"
    register: home_ls

  - name: "Use {{ ansible_env.HOME }}/.bash_profile"
    set_fact:
      profile: "{{ ansible_env.HOME }}/.bash_profile"
    when:
    - "'.bash_profile' in home_ls.stdout_lines"

  - name: "Use {{ ansible_env.HOME }}/.bash_login"
    set_fact:
      profile: "{{ ansible_env.HOME }}/.bash_login"
    when:
    - "'.bash_login' in home_ls.stdout_lines"
    - profile == ""

  - name: "Use {{ ansible_env.HOME }}/.profile"
    set_fact:
      profile: "{{ ansible_env.HOME }}/.profile"
    when:
    - "'.profile' in home_ls.stdout_lines"
    - profile == ""

  - name: "Look for fragment in {{ profile }}"
    command: "grep 'This is a fragment' {{ profile }}"
    register: profile_grep
    # ignore_errors: true
    failed_when: false

  - name: "Append to {{ profile }}"
    shell: "cat {{ ansible_env.HOME }}/repos/toys/misc/.profile >> {{ profile }}"
    when: profile_grep.rc != 0

  - name: "Look for fragment in {{ ansible_env.HOME }}/.bashrc"
    command: "grep 'This is a fragment' {{ ansible_env.HOME }}/.bashrc"
    register: bashrc_grep
    # ignore_errors: true
    failed_when: false

  - name: "Append to {{ ansible_env.HOME }}/.bashrc"
    shell: "cat {{ ansible_env.HOME }}/repos/toys/misc/.bashrc >> {{ ansible_env.HOME }}/.bashrc"
    when: bashrc_grep.rc != 0

  vars:
    profile: .bash_profile
