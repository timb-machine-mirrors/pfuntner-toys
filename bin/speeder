#! /usr/bin/env python3

import re
import os
import sys
import json
import signal
import logging
import argparse
import datetime
import subprocess

from BrunoUtils import BrunoUtils

def run(cmd, stdin=None, capture=True, shell=False):
  if shell:
    if isinstance(cmd, list):
      cmd = ' '.join(cmd)
  elif isinstance(cmd, str):
    cmd = cmd.split()

  log.info('Executing {cmd}'.format(**locals()))
  p = subprocess.Popen(cmd, stdin=subprocess.PIPE if stdin else None, stdout=subprocess.PIPE if capture else None, stderr=subprocess.PIPE if capture else None, shell=shell)
  if stdin:
    p.stdin.write(stdin.encode())
    p.stdin.close()
  if capture:
    (stdout, stderr) = tuple([s.decode('utf-8') for s in p.communicate()])
  else:
    (stdout, stderr) = ('', '')
  rc = p.wait()
  log.debug('Executed {cmd}: {rc}, {stdout!r}, {stderr!r}'.format(**locals()))
  return (rc, stdout, stderr)

parser = argparse.ArgumentParser(description='Perform speedtest and log it')
parser.add_argument('-d', '--debug', action='store_true', help='Debug mode: read from stdin, write to stdout')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

log_filename = BrunoUtils.get_file(os.path.expanduser('~/speeder/log'))
logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s', filename=log_filename, force=True)
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

"""
$ speedtest | cat

   Speedtest by Ookla

     Server: Spectrum - Durham, NC (id = 16970)
        ISP: Ting Fiber
    Latency:    33.10 ms   (0.31 ms jitter)
   Download:   724.70 Mbps (data used: 1.2 GB)                               
     Upload:   757.14 Mbps (data used: 837.5 MB)                               
Packet Loss: Not available.
 Result URL: https://www.speedtest.net/result/c/8a910da9-180b-467b-9c2e-39547f5b8951
$ 
"""

common_regexp = re.compile(r'([^:=()]*)\s*[:=]\s+([^:=()]*)')
url_regexp = re.compile(r'(Result URL): (.*)$')
jitter_regexp = re.compile(r'\((\S+ \S+) (jitter)\)')

stats = dict()
start = datetime.datetime.now()
stats['start'] = start.isoformat()

if args.debug:
  if sys.stdin.isatty():
    parser.error('stdin must be redirected when --debug is used')
  hits = re.split('"""', sys.stdin.read())
  (rc, stdout, stderr) = (None, hits[1], '')
else:
  (rc, stdout, stderr) = run(['speedtest'])
stop = datetime.datetime.now()

stats['stop'] = stop.isoformat()
stats['stdout'] = stdout
stats['stderr'] = stderr
stats['rc'] = rc
stats['duration'] = str(stop-start)

for line in stdout.splitlines():
  for hit in common_regexp.findall(line):
    stats[hit[0].strip()] = hit[1].strip()

  match = url_regexp.search(line)
  if match:
    stats[match.group(1)] = match.group(2)

  match = jitter_regexp.search(line)
  if match:
    stats[match.group(2)] = match.group(1)
  
stats['Server'] = {
  'name': stats.get('Server'),
  'ID': stats.get('id'),
}

if 'id' in stats:
  del stats['id']

(rc, stdout, stderr) = run('dig +short myip.opendns.com @resolver1.opendns.com')
stats['IP'] = stdout.strip()

if args.debug:
  json.dump(stats, sys.stdout, sort_keys=True, indent=True)
  print()
else:
  with open(BrunoUtils.get_file(os.path.expanduser('~/speeder/stats')), 'a') as stream:
    json.dump(stats, stream, sort_keys=True)
    stream.write('\n')
