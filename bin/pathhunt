#! /usr/bin/env python3

import os
import re
import sys
import logging
import argparse

from table import Table

def see(expression):
  value = eval(expression)
  log.debug('{expression}: {value!r}'.format(**locals()))

def process(dir):
  if not dir:
    dir = '.'
  log.debug('process({dir!r})'.format(**locals()))
  if os.path.isdir(dir):
    files = []
    for filename in os.listdir(dir):
      if regexp.search(filename):
        files.append(filename)
    table.add(dir, ', '.join(files))
  elif os.path.exists(dir):
    log.warn('{dir}: Not a directory'.format(**locals()))
  else:
    log.warn('{dir}: Not found'.format(**locals()))
  
parser = argparse.ArgumentParser(description='Hunt for executables in PATH')
parser.add_argument('regexp', help='Regular expression for executable for which to hunt')
parser.add_argument('-v', '--verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

PATH = os.environ['PATH'].split(':')
see('PATH')

regexp = re.compile(args.regexp)

table = Table('Directory', 'Executables')
list(map((process, PATH))
sys.stdout.write(str(table))
