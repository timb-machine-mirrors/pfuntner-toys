#! /usr/bin/env python2

import sys
import logging
import argparse

parser = argparse.ArgumentParser(description='Evaluate Python expressions')
parser.add_argument('-i', '--import', dest='imports', action='append', help='Import module')
parser.add_argument('-v', '--verbose', action='store_true', help='Enable debugging')
parser.add_argument('exprs', metavar='expr', nargs='*', help='Zero or more Python expressions')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

if (not args.exprs) and sys.stdin.isatty():
  parser.error('If no expressions are on the command line, they must be redirected to stdin')

for module in args.imports or []:
  exec "import %s" % module

if not args.exprs:
  args.exprs = sys.stdin.read().splitlines()

log.debug('exprs: {args.exprs}'.format(**locals()))

for expression in args.exprs:
  log.debug('Evaluating {expression!r}'.format(**locals()))
  print eval(expression)
