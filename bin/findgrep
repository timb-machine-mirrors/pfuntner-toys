#! /usr/bin/env python2

"""
   Does `find DIR ... \( -type f [ ... ] \) -print0 | xargs -0 grep [OPT ...] REGEXP`
"""

import sys
import getopt
import subprocess

def protect(s):
  return s.replace('\\', '\\\\').replace('$', '\\$')

def syntax(msg=None):
  if msg:
    sys.stderr.write('{msg}\n'.format(**locals()))
  sys.stderr.write('Syntax: {pgm} [--file|--name FILE] [--notfile|--notname FILE] [--path PATH] [--notpath PATH] [--grepopt OPT ...] [DIR ...] REGEXP\n'.format(pgm=sys.argv[0]))
  exit(1)

(opts,args) = ([], [])
try:
  (opts,args) = getopt.getopt(sys.argv[1:], '', ['file=', 'name=', 'notfile=', 'notname=', 'path=', 'notpath=', 'grepopt=', ])
except Exception as e:
  syntax(str(e))

findOpts = '-type f'
grepOpts = []
for (opt,arg) in opts:
  if opt in ['--file', '--name']:
    findOpts += ' -name "{file}"'.format(file=protect(arg))
  elif opt in ['--notfile', '--notname']:
    findOpts += ' ! -name "{file}"'.format(file=protect(arg))
  elif opt == '--path':
    findOpts += ' -path "{path}"'.format(path=protect(arg))
  elif opt == '--notpath':
    findOpts += ' ! -path "{path}"'.format(path=protect(arg))
  elif opt == '--grepopt':
    grepOpts.append(arg)
  else:
    syntax('Unexpected option {opt!r}'.format(**locals()))

if not args:
  syntax('A regular expression is expected')

regexp = args.pop()

if not args:
  args = ['.']

cmd = 'find {dirs} \\( {findOpts} \\) -print0 | xargs -0 grep {grepOpts} "{regexp}"'.format(
  dirs=' '.join(args),
  findOpts=findOpts,
  grepOpts=' '.join(grepOpts),
  regexp=protect(regexp),
)
sys.stderr.write('{cmd}\n'.format(**locals()))
p = subprocess.Popen(cmd, shell=True)
exit(p.wait())
