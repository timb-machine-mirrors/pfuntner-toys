#! /usr/bin/env python

description='Return absolute paths of files, especially Cygwin domain to Windoze domain when appropriate'

"""
   I found a need for this when I was trying to invoke gvim on arbitrary files from a Cygwin shell.
"""

import os
import re
import sys
import argparse
import platform
import subprocess

parser = argparse.ArgumentParser(description=description)
parser.add_argument('-u', '--unix', dest='unix', action='store_true', help='Use Unix style - ignore Windoze style when run on Windoze')
parser.add_argument('paths', metavar='paths', nargs='+', help='One or more paths to process')
args = parser.parse_args()

onWindoze = (not args.unix) and ('win' in platform.platform().lower())

if onWindoze:
  CYGWIN_ROOT = 'c:/cygwin64'
  try:
    p = subprocess.Popen('cygpath --windows /'.split(), stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    (stdout, stderr) = p.communicate()
    rc = p.wait()
    if stdout:
      CYGWIN_ROOT = stdout.splitlines()[0]
  except Exception as e:
    sys.stderr.write('Caught `{e}` trying to determine Cygwin root'.format(**locals()))

def process(path):
  if not path.startswith('/'):
    path = os.path.join(os.getcwd(), path)

  path = os.path.abspath(path)

  if onWindoze:
    match = re.match('/cygdrive/([a-zA-Z])(/.*)$', path)
    if match:
      path = match.group(1) + ':' + match.group(2)
    else:
      path = CYGWIN_ROOT + path

  print path

map(process, args.paths)
