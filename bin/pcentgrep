#! /usr/bin/env python2

import re
import os
import sys
import logging
import argparse

def process(input_filename):
  stream = None

  if input_filename is not None:
    log.debug('Testing {input_filename!r} to see if the file exists'.format(**locals()))
    if os.path.isfile(input_filename):
      stream = open(input_filename)
    else:
      sys.stderr.write('Not a file: {input_filename!r}'.format(**locals()))
  else:
    stream = sys.stdin

  if stream:
    try:
      log.debug('Reading data')
      lines = stream.read().splitlines()
    except Exception as e:
      sys.stderr.write('Could not read file {input_filename!r}: {e!s}'.format(**locals()))
    else:
      total = len(lines)
      log.debug('{lines} lines'.format(**locals()))
      hits = 0
      for line in lines:
        if regexp.search(line):
          hits += 1

      print '{filename}{pcent:>6.2f}% {hits:>6} {total:>6}'.format(filename=(input_filename + ' ') if input_filename is not None else '', pcent=(100.0*hits)/(total or 1), **locals())
    if input_filename is not None:
      stream.close()

parser = argparse.ArgumentParser(description='Show percentage of lines that match a regular expression in a file')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
parser.add_argument('regexp', help='Regular expression')
parser.add_argument('files', metavar='file', nargs='*', help='Zero or more files to scan')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

regexp = re.compile(args.regexp)
if args.files:
  map(process, args.files)
else:
  if sys.stdin.isatty():
    parser.error('stdin must be redirected if no files are provided')
  process(None)
