#! /usr/bin/env python3

import sys
import signal
import logging
import argparse

from lxml import html

def visit(root, indent=0):
  attribs = root.attrib.items() if root.attrib else dict()
  if args.verbose:
    print(f'{" "*(indent*2)}{root.tag=} {attribs=} {root.text=} {root.tail=}')
  else:
    print(f'{" "*(indent*2)}<{root.tag}{" " + (" ".join([f"{key}={value!r}" for (key,value) in root.attrib.items()])) if root.attrib else ""}>{(root.text or "").strip()}')
  for node in root:
    visit(node, indent+1)
  if args.verbose:
    pass
  else:
    print(f'{" "*(indent*2)}</{root.tag}>{(root.tail or "").strip()}')

parser = argparse.ArgumentParser(description='Parse an HTML document and reform it')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be directed')

root = html.fromstring(sys.stdin.read())
visit(root)
