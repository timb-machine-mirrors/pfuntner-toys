#! /usr/bin/env python3

import json
import signal
import logging
import argparse
import subprocess

def run(cmd, capture=True):
  if isinstance(cmd, str):
    cmd = cmd.split()
  log.info('Executing {cmd}'.format(**locals()))
  p = subprocess.Popen(cmd, stdout=subprocess.PIPE if capture else None, stderr=subprocess.PIPE if capture else None)
  if capture:
    (stdout, stderr) = tuple([s.decode('utf-8') for s in p.communicate()])
  else:
    (stdout, stderr) = ('', '')
  rc = p.wait()
  log.debug('Executed {cmd}: {rc}, {stdout!r}, {stderr!r}'.format(**locals()))
  return (rc, stdout, stderr)

parser = argparse.ArgumentParser(description='Get information from Ansible hosts')
parser.add_argument('hosts', metarvar='host', default=['all'], nargs='*', help='Zero or more hosts (default: all)')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

"""
  /_meta/hostvars/aws-centos7/ansible_host '54.197.26.211'
  /_meta/hostvars/aws-centos7/ansible_ssh_private_key_file '/home/centos/.ssh/pfuntner-aws.pem'
  /_meta/hostvars/aws-centos7/ansible_user 'centos'
"""

(rc, stdout, stderr) = run('ansible-inventory --list')
if rc != 0 or not stdout:
  log.fatal(f'ansible-inventory --list failed: {rc}, {stdout!r}, {stderr!r}')
  exit(1)
inventory = json.loads(stdout)
if args.hosts == ['all']:
  args.hosts = sorted(inventory.get('_meta', {}).get('hostvars', {}).keys())
  log.info(f'all hosts => {args.hosts}')

for host in args.hosts:
  if host == 'localhost':
    pass
