#! /usr/bin/env python3

import re
import os
import logging
import argparse

from docx import Document # from python-docx

parser = argparse.ArgumentParser(description='Grep a Word document (`*.doc.x`, etc)')

def process(filename):
  if os.path.basename(filename)[0:1] == '~':
    log.info('Skipping {filename!r}'.format(**locals()))
  else:
    with open(filename) as stream:
      try:
        doc = Document(stream)
      except Exception as e:
        log.warning('Could not open {filename!r}: {e!s}'.format(**locals()))
      else:
        for paragraph in doc.paragraphs:
          text = paragraph.text
          if regexp.search(text):
            if args.list:
              print(filename)
              break
            else:
              print('{filename}: {text!r}'.format(**locals()))

parser.add_argument('regexp', help='Regular expression with which to search')
parser.add_argument('files', metavar='file', nargs='+', help='One or more files')
parser.add_argument('-l', '--list', action='store_true', help='List files that match the regular expression')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
# log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

regexp = re.compile(args.regexp)
list(map(process, args.files))
