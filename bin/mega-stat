#! /usr/bin/env python3

import os
import sys
import signal
import logging
import datetime
import argparse

parser = argparse.ArgumentParser(description='Get stat information from files')
parser.add_argument('paths', metavar='path', nargs='+', help='One or more paths to files')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

"""
$ mega-stat foo
  File: foo
  Size: 1483            Blocks: 8          IO Block: 4096   regular file
Device: 53h/83d Inode: 17732923532907633  Links: 1
Access: (0777/-rwxrwxrwx)  Uid: ( 1000/jpfuntne)   Gid: ( 1000/jpfuntne)
Access: 2024-04-25 08:17:27.129931200 -0400 (XdXhXmXs)
Modify: 2024-04-25 08:17:27.125527600 -0400 (XdXhXmXs)
Change: 2024-04-25 08:17:27.129931200 -0400 (XdXhXmXs)
$
"""

for (pos, path) in enumerate(args.paths):
  if pos > 0:
    print()

  if not os.path.exists(path):
    log.warning(f'Could not find {path!r}')
    continue

  print(f'  File: {path}')
  print(f'  Size: {os.path.getsize(path):-14}', end='')
  # print(f'  Blocks: {os.path.getblocks(path):-15}', end='')
  print()
