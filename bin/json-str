#! /usr/bin/env python3

import sys
import json
import signal
import logging
import argparse

parser = argparse.ArgumentParser(description='Print a string from a JSON object')
parser.add_argument('path', help='Path to object')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

data = json.load(sys.stdin)

path = args.path.split('/')
while path:
  log.info(f'Processing element {path!r}')
  elem = path.pop(0)
  if isinstance(data, dict):
    if elem in data:
      data = data[elem]
    else:
      log.error(f'Element not present: {elem!r}')
      exit(1)
  elif isinstance(data, list):
    try:
      elem = int(elem)
    except Exception as e:
      log.error('You must use a numeric index for a list')
      exit(1)     

    if 0 <= elem < len(data):
      data = data[elem]
    else:
      log.error(f'Element {elem} out of range')
      exit(1)     

if data:
  print(data)
else:
  log.warning('No data to print')
