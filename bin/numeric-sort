#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse

def get_tokens(s):
  tokens = []
  pos = 0
  for hit in list(regexp.finditer(s)):
    if hit.start(0) > pos:
      tokens.append(s[pos:hit.start(0)])
    tokens.append(int(hit.group(0)))
    pos = hit.end(0)
  if pos < len(s):
    tokens.append(s[pos:])
  return tokens

parser = argparse.ArgumentParser(description='Sort stdin with numerics intelligently')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

regexp = re.compile('\d+')

lines = list()
for line in sys.stdin.read().splitlines():
  tokens = get_tokens(line)
  lines.append((line, tokens))

log.info(f'Initially: {lines}')
lines.sort(key=lambda line: line[1])
print('\n'.join([line[0] for line in lines]))
