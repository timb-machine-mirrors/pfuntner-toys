#! /usr/bin/env python

import logging
import argparse

parser = argparse.ArgumentParser(description='Find lines that occupy specific byte positions in a file')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
parser.add_argument('path', help='Path to fild to scan')
parser.add_argument('bytes', metavar='byte', nargs='+', help='One or more byte positions to locate', type=int)
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

with open(args.path) as stream:
  bytes = 0
  for (linenum, line) in enumerate(stream.read().splitlines()):
    log.debug('{linenum} {bytes} {line!r}'.format(**locals()))
    end = bytes+len(line)
    if [byte for byte in args.bytes if bytes <= byte <= end]:
      print '{linenum:>6} {bytes:>10} {end:>10} {line!r}'.format(**locals())
    bytes = end + 1
