#! /usr/bin/env python3

import os
import logging
import argparse
import subprocess

parser = argparse.ArgumentParser(description='Get a file from one or more remote nodes')
parser.add_argument('path', help='Path to file to get')
parser.add_argument('nodes', metavar='node', nargs='+', help='One or more remote nodes')
parser.add_argument('-q', '--quiet', action='store_true', help='Use scp --quiet option')
parser.add_argument('-d', '--dry-run', action='store_true', help='Do not execute scp commands')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
# log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

if args.dry_run:
  log.setLevel(logging.DEBUG)
else:
  log.setLevel(logging.WARNING - (args.verbose or 0)*10)

basename = os.path.basename(args.path)
for node in args.nodes:
  dest = '{node}-{basename}'.format(**locals())
  print(dest)
  cmd = ['scp'] + (['-q'] if args.quiet else []) + ['{node}:{args.path}'.format(**locals()), dest]
  log.info(cmd)
  if not args.dry_run:
    subprocess.Popen(cmd).wait()
