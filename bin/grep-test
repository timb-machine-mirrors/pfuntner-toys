#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse

def grep(pattern, stream):
  regexp = re.compile(pattern)
  for (pos, line) in enumerate(stream.read().splitlines()):
    match = regexp.search(line)
    print(f'{regexp.pattern!r}')
    print(f'{stream.name}:{pos}: {line!r}')
    if match:
      print('Match, groups: {groups}'.format(groups=match.groups()))
    else:
      print('No match')
    print()

parser = argparse.ArgumentParser(description='grep-test')
parser.add_argument('-r', '--regexp', action='append', required=True, help='One or more regular expressions')
parser.add_argument('files', metavar='file', nargs='*', help='Zero or more files to search')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if args.files:
  for filename in args.files:
    if os.path.exists(filename):
      if not os.path.isdir(filename):
        with open(filename) as stream:
          grep(regexp, stream)
      else:
        log.warning(f'{filename!r} is not readable')
    else:
      log.warning(f'{filename!r} not found')
else:
  if sys.stdin.isatty():
    log.fatal('stdin must be redirected if not files are specified')
  for regexp in args.regexp:
    grep(regexp, sys.stdin)
