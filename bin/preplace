#! /usr/bin/env python3

import re
import sys
import logging
import argparse

def convert_newlines(s):
  ret = ''
  for c in s:
    if c == 'n' and ret[-1:] == '\\' and ret[-2:] != '\\\\':
      ret = ret[:-1]
      c = '\n'
    ret += c
  log.info(f'{s!r} => {ret!r}')
  return ret

parser = argparse.ArgumentParser(description='Do a Python style replace using regular expressions')
parser.add_argument('old_string', help='The old string specified as a regular expression')
parser.add_argument('new_string', help='The new string')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

print(re.sub(convert_newlines(args.old_string), convert_newlines(args.new_string), sys.stdin.read()), end='')
