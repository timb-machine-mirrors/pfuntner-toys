#! /usr/bin/env python3

import re
import sys
import datetime

def syntax(msg=None):
  if msg:
    sys.stderr.write(msg + "\n")
  sys.stderr.write("Syntax:\n")
  sys.stderr.write("  %s DATE|now +|- DELTA\n" % sys.argv[0])
  sys.stderr.write("  %s DATE|now - DATE\n" % sys.argv[0])
  exit(1)

def parseTimestamp(s):
  ret = None
  for format in timestampFormats:
    try:
      ret = datetime.datetime.strptime(s, format)
    except Exception as e:
      pass
    else:
      break

  if not ret:
    syntax("%s does not match %s" % (repr(s), ", ".join(timestampFormats)))

  return ret

deltaRegexp = re.compile("^((\d+)(d))?((\d+)(h))?((\d+)(m))?((\d+)(s))?$")
timestampFormats = [
                     "%Y-%m-%d",
                     "%Y-%m-%dT%H:%M",
                     "%Y-%m-%dT%H:%M:%S",
                     "%H:%M:%S",
                     "%H:%M",
                   ]

if len(sys.argv) != 4:
  syntax()

t1 = None
t2 = None
if sys.argv[1] == "now":
  t1 = datetime.datetime.now()
else:
  t1 = parseTimestamp(sys.argv[1])

if sys.argv[2] not in ["+", "-"]:
  syntax("Bad operator: %s" % repr(sys.argv[2]))

match = deltaRegexp.search(sys.argv[3])
if match:
  groups = match.groups()
  comps = {}
  if groups[1]:
    comps["days"] = int(groups[1])
  if groups[4]:
    comps["hours"] = int(groups[4])
  if groups[7]:
    comps["minutes"] = int(groups[7])
  if groups[10]:
    comps["seconds"] = int(groups[10])
  if not comps:
    syntax("Bad delta: %s" % repr(sys.argv[3]))
  t2 = datetime.timedelta(**comps)
else:
  t2 = parseTimestamp(sys.argv[3])
  if t2 > t1:
    (t1, t2) = (t2, t1)

if sys.argv[2] == "+":
  print(t1 + t2)
else:
  print(t1 - t2)
