#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse

from simpletable import Table

parser = argparse.ArgumentParser(description='Rotate a table - rows become columns, columns become rows')
parser.add_argument('-s', '--separator', default=r'\|', help=r'Regular expression describing token separator (default: `\|`)')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
# log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be directed')

regexp = re.compile(args.separator)
data = [regexp.split(line) for line in sys.stdin.read().splitlines()]
log.debug(f'data: {data}')

table = Table(list(range(len(data))))

column = 0

while True:
  log.info(f'Column: {column}')

  row = []

  for datum in data:
    row.append(datum[column] if column < len(datum) else '')

  if any([bool(cell) for cell in row]):
    table.add(*row)
    column += 1
  else:
    break

table.close()
