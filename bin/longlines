#! /usr/bin/env python3

import re
import os
import sys
import logging
import argparse

def process(filename):
  stream = None

  if filename:
    if os.path.isfile(filename):
      try:
        stream = open(filename)
      except Exception as e:
        log.error('Could not open {filename!r}: {e!s}'.format(**locals()))
    else:
      log.error('Not a file: {filename!r}'.format(**locals()))
  else:
    stream = sys.stdin

  if stream:
    linenum = 0
    while True:
      line = stream.readline()
      if line:
        linenum += 1
        line = line.strip('\n')
        if regexp.search(line):
          print('{filename}{colon}{linenum}{long} {line}'.format(
            filename=filename if filename else '',
            colon=':' if filename else '',
            linenum=linenum,
            line=line,
            long=' ({bytes} bytes)'.format(bytes=len(line)) if args.long else '',
          ))
      else:
        break

    if filename:
      stream.close()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG)

parser = argparse.ArgumentParser(description='Locate long lines in files')
parser.add_argument('files', metavar='file', nargs='*', help='Zero or more files')
parser.add_argument('-l', '--long', action='store_true', help='Long form output')
args = parser.parse_args()

regexp = re.compile('^.{120}')

if args.files:
  list(map((process, args.files))
else:
  if sys.stdin.isatty():
    log.error('stdin must be directed if no files are specified on the command line')
    exit(1)
  process(None)
