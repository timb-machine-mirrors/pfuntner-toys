#! /usr/bin/env python2

"""
   Print specified lines to stdout/stderr and exit with specified status
"""

import sys
import logging
import argparse

def see(expr):
  value = eval(expr)
  logging.info('{expr}: {value!r}'.format(**locals()))

def dump(name):
  msgs = getattr(args, name)
  if msgs:
    getattr(sys, name).write('\n'.join(msgs) + '\n')

parser = argparse.ArgumentParser(description='A simple script that just writes the specified stdout/stderr and exits with the specified exit status')
parser.add_argument('-o', '--out', '--stdout', dest='stdout', action='append', help='Message for stdout')
parser.add_argument('-e', '--err', '--stderr', dest='stderr', action='append', help='Message for stderr')
parser.add_argument('-x', '--exit', '-s', '--status', dest='status', type=int, default=0, help='Exit status')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

see('args.stdout')
see('args.stderr')
see('args.status')

dump('stdout')
dump('stderr')
exit(args.status)
