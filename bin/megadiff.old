#! /usr/bin/env python3

import os
import re
import sys
import getopt
import hashlib
import subprocess

def syntax(msg=None):
  if msg:
    sys.stderr.write('{msg}\n'.format(**locals()))
  sys.stderr.write('{pgm} [--verbose] dir1 dir2\n'.format(pgm=sys.argv[0]))
  exit(1)

def getFileType(path):
  if os.path.isfile(path):
    return 'f'
  elif os.path.isdir(path):
    return 'd'
  else:
    raise Exception('Cannot determine file type of {path!r}'.format(**locals()))

def getMd5sum(path):
  sum = hashlib.md5()
  with open(path) as stream:
    sum.update(stream.read().encode('utf-8'))
  return sum.hexdigest()

def getdir(args):
  if not args:
    syntax('Missing directory or directories')

  path = args.pop(0)
  if not os.path.isdir(path):
    syntax('{path!r} is not a directory'.format(**locals()))

  return (path, args)

def excluded(filename):
  global excludes

  return any([exclude.match(filename) for exclude in excludes])

def diff(dir1, dir2):
  files1 = sorted(os.listdir(dir1))
  files2 = sorted(os.listdir(dir2))
  while files1 or files2:
    if files1:
      file1 = files1[0]
      if not files2:
        if not excluded(file1):
          print('missing {dir1}/{file1} None'.format(**locals()))
        files1.pop(0)
        continue
    if files2:
      file2 = files2[0]
      if not files1:
        if not excluded(file2):
          print('missing None {dir2}/{file2}'.format(**locals()))
        files2.pop(0)
        continue

    path1 = os.path.join(dir1, file1)
    path2 = os.path.join(dir2, file2)
    if file1 == file2:
      if not excluded(file1):
        if getFileType(path1) == getFileType(path2):
          if os.path.isdir(path1):
            diff(path1, path2)
          elif getMd5sum(path1) == getMd5sum(path2):
            print('match {path1} {path2}'.format(**locals()))
          else:
            print('md5sum-mismatch {path1} {path2}'.format(**locals()))
        else:
          print('type-mismatch {path1} {path2}'.format(**locals()))
      files1.pop(0)
      files2.pop(0)
    elif file1 < file2:
      if not excluded(file1):
        print('missing {dir1}/{file1} None'.format(**locals()))
      files1.pop(0)
    else:
      if not excluded(file2):
        print('missing None {dir2}/{file2}'.format(**locals()))
      files2.pop(0)

verbose = False
excludes = []

(opts, args) = ([], [])
try:
  (opts, args) = getopt.getopt(sys.argv[1:], 'vx:', ['verbose', 'exclude='])
except Exception as e:
  syntax(str(e))

for (opt, arg) in opts:
  if opt in ['-v', '--verbose']:
    verbose = not verbose
  elif opt in ['-x', '--exclude']:
    excludes.append(re.compile(arg))
  else:
    syntax('Unexpected option: {opt!r}'.format(**locals()))

(dir1, args) = getdir(args)
(dir2, args) = getdir(args)

if args:
  syntax('Unexpected arguments: {args}'.format(**locals()))

diff(dir1, dir2)
