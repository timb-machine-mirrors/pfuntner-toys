#! /usr/bin/env python3

import sys
import json
import signal
import logging
import argparse

import bruno_tools

def fix(root):
  if not isinstance(root, str):
    if isinstance(root, list):
      for (pos, value) in enumerate(root):
        root[pos] = fix(value)
    elif isinstance(root, dict):
      for (key, value) in root.items():
        root[key] = fix(value)
    else:
      root = repr(root)

  return root
  
parser = argparse.ArgumentParser(description='Turn non-string values in a JSON object to strings')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be directed')

obj = json.load(sys.stdin)
fix(obj)
json.dump(obj, sys.stdout, indent=2)
print()
