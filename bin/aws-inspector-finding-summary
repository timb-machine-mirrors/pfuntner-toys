#! /usr/bin/env python3

import sys
import json
import signal
import logging
import argparse

class Table(object):
    """
    A class the produces pretty tabular output - nicely alinged rows and columns
    """
    def __init__(self, *headings, banner=False):
        """
        Constructor that initializes the Table class

        Args:
            headings: A list of objects for the headings of the columns.  The number
            of headings must match the number of cells in each row.
        """
        # `self.data` is a list that contains all the cells in the table, including the headings
        self.data = [ [str(heading) for heading in headings] ]

        # `self.widths` contains the widths of each column - the maximum width of each cell in a column
        self.widths = [len(heading) for heading in self.data[0]]

        if banner:
          self.banner = '=' if banner == True else banner
        else:
          self.banner = False


    def add(self, *columns):
        """
        Adds a row to the table

        Args:
            columns: A list of objects for the cells in the row.
        """

        # assure the number of cells matches the number of headings
        assert len(columns) == len(self.data[0])

        self.data.append(list(map(str, columns)))

        # recalculate the maximum columns widths
        for (column_number, column) in enumerate(columns):
            self.widths[column_number] = max(self.widths[column_number], len(column))

    def __str__(self):
        """
        Formats the rows (including headings) and columns aligned according to
        the maximum width of each column
        """
        ret = list()

        if self.banner:
          self.data.insert(1, [self.banner * self.widths[col_num] for col_num in range(len(self.data[0]))])
          self.banner = False

        for row_num in range(len(self.data)):
            ret.append(('  '.join([self.data[row_num][col_num].ljust(self.widths[col_num]) for col_num in range(len(self.data[0]))])).rstrip())

        return '\n'.join(ret)

    def close(self):
        """
        Completes the table and prints out all the rows (including headings) and columns aligned according to
        the maximum width of each column
        """

        print(str(self))

parser = argparse.ArgumentParser(description='Summarize Inspector 2 findings')
parser.add_argument('paths', metavar='path', nargs='+', help='One or more Inspector 2 JSON finding files')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

"""
/findings/0/awsAccountId '338885122066'
/findings/0/description '\n It was discovered that the Traffic-Control Index (TCINDEX) implementation\n in the Linux kernel contained a use-after-free vulnerability. A local\n attacker could use this to cause a denial of service (system crash) or\n possibly execute arbitrary code.'
/findings/0/exploitAvailable 'NO'
/findings/0/findingArn 'arn:aws:inspector2:us-east-1:338885122066:finding/01f12e4e243d6601cfbdf6027f545ed7'
/findings/0/firstObservedAt '2023-04-28T18:18:15.871Z'
/findings/0/fixAvailable 'YES'
/findings/0/lastObservedAt '2023-04-28T18:18:15.871Z'
/findings/0/packageVulnerabilityDetails/cvss/0/baseScore 7.8
/findings/0/packageVulnerabilityDetails/cvss/0/scoringVector 'CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H'
/findings/0/packageVulnerabilityDetails/cvss/0/source 'NVD'
/findings/0/packageVulnerabilityDetails/cvss/0/version '3.1'
/findings/0/packageVulnerabilityDetails/referenceUrls/0 'https://ubuntu.com/security/notices/USN-6024-1'
/findings/0/packageVulnerabilityDetails/referenceUrls/1 'https://ubuntu.com/security/notices/USN-6025-1'
/findings/0/packageVulnerabilityDetails/referenceUrls/2 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1281'
/findings/0/packageVulnerabilityDetails/referenceUrls/3 'https://ubuntu.com/security/notices/USN-6027-1'
/findings/0/packageVulnerabilityDetails/referenceUrls/4 'https://ubuntu.com/security/notices/USN-5977-1'
/findings/0/packageVulnerabilityDetails/referenceUrls/5 'https://ubuntu.com/security/notices/USN-5978-1'
/findings/0/packageVulnerabilityDetails/referenceUrls/6 'https://ubuntu.com/security/notices/USN-6029-1'
/findings/0/packageVulnerabilityDetails/referenceUrls/7 'https://ubuntu.com/security/notices/USN-6030-1'
/findings/0/packageVulnerabilityDetails/referenceUrls/8 'https://ubuntu.com/security/notices/USN-6040-1'
/findings/0/packageVulnerabilityDetails/referenceUrls/9 'https://ubuntu.com/security/notices/USN-6031-1'
/findings/0/packageVulnerabilityDetails/source 'UBUNTU_CVE'
/findings/0/packageVulnerabilityDetails/sourceUrl 'https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-1281.html'
/findings/0/packageVulnerabilityDetails/vendorCreatedAt '2023-03-22T14:15:00Z'
/findings/0/packageVulnerabilityDetails/vendorSeverity 'high'
/findings/0/packageVulnerabilityDetails/vulnerabilityId 'CVE-2023-1281'
/findings/0/packageVulnerabilityDetails/vulnerablePackages/0/arch 'ALL'
/findings/0/packageVulnerabilityDetails/vulnerablePackages/0/epoch 0
/findings/0/packageVulnerabilityDetails/vulnerablePackages/0/fixedInVersion '0:5.15.0.1034.38~20.04.23'
/findings/0/packageVulnerabilityDetails/vulnerablePackages/0/name 'linux-image-aws'
/findings/0/packageVulnerabilityDetails/vulnerablePackages/0/packageManager 'OS'
/findings/0/packageVulnerabilityDetails/vulnerablePackages/0/remediation 'apt update && apt install --only-upgrade linux-image-aws'
/findings/0/packageVulnerabilityDetails/vulnerablePackages/0/version '5.15.0.1033.37~20.04.22'
/findings/0/remediation/recommendation/text 'None Provided'
/findings/0/resources/0/details/awsEc2Instance/imageId 'ami-0c0748a1b269638ed'
/findings/0/resources/0/details/awsEc2Instance/ipV4Addresses/0 '172.31.2.124'
/findings/0/resources/0/details/awsEc2Instance/ipV4Addresses/1 '34.207.252.12'
/findings/0/resources/0/details/awsEc2Instance/keyName 'pfuntner-aws'
/findings/0/resources/0/details/awsEc2Instance/launchedAt '2023-04-28T18:01:23Z'
/findings/0/resources/0/details/awsEc2Instance/platform 'UBUNTU_20_04'
/findings/0/resources/0/details/awsEc2Instance/subnetId 'subnet-e6a194af'
/findings/0/resources/0/details/awsEc2Instance/type 'a1.medium'
/findings/0/resources/0/details/awsEc2Instance/vpcId 'vpc-809519e6'
/findings/0/resources/0/id 'i-0aae0ffc13930dbe4'
/findings/0/resources/0/partition 'aws'
/findings/0/resources/0/region 'us-east-1'
/findings/0/resources/0/tags/ApplicationName 'STO Cloud9 Hardening'
/findings/0/resources/0/tags/CiscoMailAlias 'cloud9-support@cisco.com'
/findings/0/resources/0/tags/DataClassification 'Cisco Public'
/findings/0/resources/0/tags/DataTaxonomy 'Cisco Strategic Data'
/findings/0/resources/0/tags/Environment 'Sandbox'
/findings/0/resources/0/tags/Name 'pfuntner-aws-ubuntu20'
/findings/0/resources/0/tags/ResourceOwner 'STO Cloud9'
/findings/0/resources/0/type 'AWS_EC2_INSTANCE'
/findings/0/severity 'HIGH'
/findings/0/status 'ACTIVE'
/findings/0/title 'CVE-2023-1281 - linux-image-aws'
/findings/0/type 'PACKAGE_VULNERABILITY'
/findings/0/updatedAt '2023-04-28T18:18:15.871Z'
"""

table = Table('Instance', 'Vulnerability description', 'Vulnerability title', 'Vulnerability severity', 'Vulnerability source URL')
for path in args.paths:
  with open(path) as stream:
    findings = json.load(stream)
  if findings.get('findings'):
    for finding in findings['findings']:
      table.add(
        finding.get('resources', [])[0].get('tags', {}).get('Name') or finding.get('resources', [])[0]['id'], 
        repr(finding['description'])[1:-1],
        finding['title'],
        finding['severity'],
        finding['packageVulnerabilityDetails']['sourceUrl'],
      )
  else:
    table.add(
      path,
      'None',
      'None',
      'None',
      'None',
    )
table.close()
