#! /usr/bin/env python3

import sys
import math
import logging
import argparse

from table import Table

def process(filename=None):
  stream = open(filename) if filename else sys.stdin
  lines = stream.read().splitlines()
  numlines = len(lines)
  lengths = [len(line) for line in lines]
  maxlen = max(lengths) if lengths else 0
  avglen = (sum(lengths)/float(numlines)) if numlines else 0
  stddev = math.sqrt(sum([math.pow(linelen - avglen, 2) for linelen in lengths]) / numlines) if lengths else 0
  shorts = len([linelen for linelen in lengths if linelen <= avglen])
  longs = len([linelen for linelen in lengths if linelen > avglen])

  table.add(filename if filename else '-', numlines, maxlen, avglen, stddev, shorts, longs)

  if filename:
    stream.close()

parser = argparse.ArgumentParser(description='Measure files')
parser.add_argument('files', metavar='file', nargs='*', help='Zero or more files to measure')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

table = Table('File', 'Lines', 'Max len', 'Avg len', 'Std dev', 'Short lines', 'Long lines')

if args.files:
  list(map(process, args.files))
else:
  if sys.stdin.isatty():
    parser.error('stdin must be redcirected if no files are specified')
  process()

sys.stdout.write(str(table))
