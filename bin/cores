#! /usr/bin/env python3

import re
import sys
import subprocess

"""
root@zaci-20 bin> lscpu
Architecture:          s390x
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Big Endian
CPU(s):                2
On-line CPU(s) list:   0,1
Thread(s) per core:    1
Core(s) per socket:    8
"""

def get(name, default=None):
  value = None

  if name in config:
    value = int(config[name])
    sys.stderr.write("%s: %d\n" % (name, value))
  elif default != None:
    value = default
    sys.stderr.write("%s: %d (default)\n" % (name, value))

  assert value != None, "`%s` is not defined and has no default value" % name
  return value

p = subprocess.Popen(["lscpu"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
(stdout, stderr) = p.communicate()
stdout = stdout.decode('utf-8')
stderr = stderr.decode('utf-8')
rc = p.wait()
assert (rc == 0) and (not stderr), "`lscpu` failed: %d, %s, %s" % (rc, repr(stdout), repr(stderr))

config = {}
for line in stdout.strip('\n').split('\n'):
  match = re.match("([^:]+):\s+(\S.*)$", str(line))
  if match:
    config[match.group(1)] = match.group(2)

print(get("CPU(s)") * get("Core(s) per socket", default=1))
