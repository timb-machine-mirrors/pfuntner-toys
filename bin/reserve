#! /usr/bin/env python2

import os
import logging
import argparse

from table import Table


class Dev(object):
  def __init__(self, path):
    log.debug('Getting information on {path}'.format(**locals()))

    self.path = path
    stats = os.statvfs(path)
    log.debug('dir(stats): {}'.format(dir(stats)))
    for attr in dir(stats):
      if attr.startswith('f_'):
        setattr(self, attr, getattr(stats, attr))

  def __str__(self):
    log.debug('dir(self): {}'.format(dir(self)))
    return str({key: getattr(self, key) for key in dir(self) if key.startswith('f_') or key == 'path'})


def pcent(amt):
  if (amt == 0) or (amt > .01):
    return '{amt:.0%}'.format(**locals())
  else:
    return '{:f}%'.format(amt*100)


parser = argparse.ArgumentParser(description='Calculate server amount on a filesystem')
parser.add_argument('files', metavar='file', nargs='+', help='One or more files')
parser.add_argument('-a', '--all', dest='all', action='store_true', help='Print mount point, blocks')
parser.add_argument('-v', '--verbose', dest='verbose', action='count', help='Enable more debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - 10*(args.verbose or 0))

mountpoints = {}
with open('/etc/mtab') as stream:
  for line in stream.read().splitlines():
    tokens = line.split()
    if len(tokens) > 1:
      mountpoint = tokens[1]
      if not mountpoint.startswith('/var/lib/docker/'):
        try:
          mountpoints[os.stat(mountpoint).st_dev] = Dev(mountpoint)
        except Exception as e:
          log.debug('Caught `{e!s}`'.format(**locals()))

if args.all:
  table = Table(
    ['Path', 'Mount point', 'Total blocks', 'Free blocks', 'Available blocks', 'Reserve'],
    numeric_justify=True, desiredSep='  ')
else:
  table = Table(['Path', 'Reserve'], numeric_justify=True, desiredSep='  ')

for filename in args.files:
  """
  2019-07-12 07:35:29,303 INFO /home/mrbruno/bin/reserve:47 . {'f_bsize': 4096, 'f_bavail': 458381322, 'f_favail': 122049006, 'f_files': 122101760, 'f_frsize': 4096, 'f_blocks': 480681932, 'f_ffree': 122049006, 'f_bfree': 458385418, 'f_namemax': 255, 'f_flag': 4102}
  """
  dev = mountpoints[os.stat(filename).st_dev]
  log.info('{filename} {dev!s}'.format(**locals()))
  reserve = float(dev.f_bfree - dev.f_bavail) / dev.f_blocks
  if args.all:
    table.add(
      filename, dev.path, str(dev.f_blocks), str(dev.f_bfree), str(dev.f_bavail), pcent(reserve)
    )
  else:
    table.add(filename, pcent(reserve))

print str(table)
