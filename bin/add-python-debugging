#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse

parser = argparse.ArgumentParser(description='vi macro to add Python debugging')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
# log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  sys.stderr.write('stdin must be redirected\n')
  exit(1)

regexp1 = re.compile(r'^(\s*)(\w+)\s*=')
regexp2 = re.compile(r'^(\s*)(\S+)\s*=')

for line in sys.stdin.read().splitlines():
  print(line)
  match = regexp1.search(line)
  if match:
    log.info(f'{line!r} matched {regexp1.pattern!r}')
  else:
    match = regexp2.search(line)
    if match:
      log.info(f'{line!r} matched {regexp2.pattern!r}')

  if match:
    indent = match.group(1)
    value = match.group(2)
    label = value.replace('\'', '\\\'')
    print(f'{indent}print(\'{label}={{!r}}\'.format({value}))')
  else:
    log.info(f'{line!r} does not match either regular expression')
