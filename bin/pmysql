#! /usr/bin/env python3

import sys
import csv
import getpass
import logging
import requests
import argparse
from SecureKeyValues import SecureKeyValues

import mysql.connector

parser = argparse.ArgumentParser(
  description='MySQL interface',
  # formatter_class=argparse.ArgumentDefaultsHelpFormatter
)
parser.add_argument('-S', '--server', dest='server', help='MySQL server', required=True)
parser.add_argument('-d', '--database', dest='database', help='MySQL database', required=True)
parser.add_argument('-u', '--user', dest='user', help='MySQL userid')
parser.add_argument('-c', '--csv', dest='csv', action='store_true', help='Output results in CSV form')
parser.add_argument('-v', '--verbose', dest='verbose', action='count', help='Display more debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(funcName)s %(msg)s')
log = logging.getLogger('iyt')
log.setLevel(logging.WARNING - 10*(args.verbose or 0))

(user, password) = (None, None)
if args.user:
  user = args.user
  password = getpass.getpass('Enter the password for {user}@{args.server}: '.format(**locals()))
else:
  store = SecureKeyValues('mysql', ssh=True)

  log.setLevel(logging.WARNING - 10 * (args.verbose or 0))

  if args.server not in store.store:
    log.warning('{store.filename} does not contain {args.server!r} server'.format(**locals()))

  if args.database not in store.store.get(args.server, {}):
    log.warning('{store.filename} does not contain {args.server}/{args.database} '.format(**locals()))

  user = store.store.get(args.server, {}).get(args.database, {}).get('user')
  password = store.store.get(args.server, {}).get(args.database, {}).get('password')

  if user and password:
    log.debug('Obtained secure key/values')

if (not user) or (not password):
  parser.error('Either set up credentials in a secure store or specify --user')

log.info('Connecting to {user}@{args.server}'.format(**locals()))

con = mysql.connector.connect(
  host=args.server,
  user=user,
  passwd=password,
  database=args.database,
)

log.debug('Connected to mysql')

cursor = con.cursor()

try:
  cursor.execute(sys.stdin.read())
except Exception as e:
  log.error('Caught `{e!s}` while executing command'.format(**locals()))
  exit(1)

try:
  results = cursor.fetchall()
except Exception as e:
  log.error('Caught `{e!s}` while extracting results'.format(**locals()))
  exit(1)

if args.csv:
  writer = csv.writer(sys.stdout)
  for result in results:
    writer.writerow(result)
else:
  for result in results:
    print(result)

con.commit()
