#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse

import bruno_tools

parser = argparse.ArgumentParser(description='Collate cells of a table, once by X axis, once by Y axis')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

regexp = re.compile(r'\s{2,}')

data = list()
x_axis = dict()
y_axis = dict()

for line in sys.stdin.read().splitlines():
  data.append(regexp.split(line))

num_cells = [len(tokens) for tokens in data]
if len(set(num_cells)) != 1:
  parser.error(f'Token parsing misalignment: {num_cells}')

for col in range(1, len(data[0])):
  print(data[0][col])
  table = bruno_tools.Table('Column', 'Count')
  summary = dict()
  for row in range(1, len(data)):
    summary[data[row][col]] = summary.get(data[row][col], 0) + 1
  for (pos, state) in enumerate(sorted(summary.keys())):
    table.add(state, summary[state])
  table.close()
  print()

for row in range(1, len(data)):
  print(data[row][0])
  table = bruno_tools.Table('Row', 'Count')
  summary = dict()
  for col in range(1, len(data[0])):
    summary[data[row][col]] = summary.get(data[row][col], 0) + 1
  for (pos, state) in enumerate(sorted(summary.keys())):
    table.add(state, summary[state])
  table.close()
  print()
