#! /usr/bin/env python

import re
import logging
import argparse
import subprocess

from ansiblehelper import AnsibleHelper

parser = argparse.ArgumentParser(description='scp with ansible target ansible host')
parser.add_argument('host', help='The name of the target host')
parser.add_argument('files', metavar='file', nargs='+', help='Two or more files')
parser.add_argument('-q', '--quiet', dest='quiet', action='store_true', help='Enable ssh quiet mode')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

if len(args.files) < 2:
  parser.error('At least two files are expected')

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

try:
  host = AnsibleHelper.get_host(args.host)
except Exception as e:
  parser.error(str(e))
else:
  log.debug('{args.host}: {host}'.format(**locals()))

  remote_regexp = re.compile('^remote:')
  remote_prefix = '{ansible_user}@{ansible_host}:'.format(**host)
  substitutions = 0

  cmd = ['scp', '-i', host['ansible_ssh_private_key_file']]
  if args.quiet:
    cmd.append('-q')
  for file in args.files:
    if remote_regexp.search(file):
      substitutions += 1
      cmd.append(remote_regexp.sub(remote_prefix, file))
    else:
      cmd.append(file)
  log.debug(cmd)
  if substitutions:
    subprocess.Popen(cmd).wait()
  else:
    parser.error('No {remote_regexp.pattern!r} substitutions!'.format(**locals()))
