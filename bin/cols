#! /usr/bin/env python3

"""
   Print lines to identify the columns, keyed off the width of the screen.  Useful to know how long lines are, what column a character/field is in, etc.
"""

import re
import sys
import pdb
import math
import getopt
import logging
import argparse
import subprocess

from BrunoUtils import BrunoUtils

parser = argparse.ArgumentParser(description='Display columns')
parser.add_argument('-d', '--debug', action='store_true', help='Launch Python interactive debugger')
parser.add_argument('-w', '--width', type=int, help='Specific number of columns')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

if args.width:
  if not sys.stdin.isatty():
    parser.error('You may not both redirect stdin and specify a specific width')
  width = args.width
elif not sys.stdin.isatty():
  width = 0
  lines = sys.stdin.read().splitlines()
  for line in lines:
    width = max(len(line), width)
    print(line)
else:
  if args.debug:
    pdb.set_trace()
  width = BrunoUtils.cols()

if width <= 0:
  parser.error(f'`{width}` is in invalid width')

digits = int(math.floor(math.log10(width))+1)

for digit in range(digits, 0, -1):
  print(''.join([str(num)*int(math.pow(10, digit-1)) for num in range(10)] * int(math.ceil(width/math.pow(10, digit)+1)))[1:width+1])
