#! /usr/bin/env python3

import sys
import string
import datetime

from BrunoUtils import *

verbose = False
def debug(msg):
  if verbose:
    now = datetime.datetime.now()
    sys.stderr.write('{now}: {msg}\n'.format(**locals()))

def process(file):
  global width, beginning, ending, middle, ellipses

  while True:
    line = file.readline()
    if not line:
      break

    debug('read {line!r}'.format(**locals()))
    line = line.replace('\r', '').replace('\n', '')
    if len(line) <= width:
      print(line)
    else:
      if beginning:
        print("%s%s" % (ellipses, line[-(width-len(ellipses)):]))
      elif middle:
        prefix = int((width-len(ellipses))/2)
        suffix = width - prefix - len(ellipses)
        print("%s%s%s" % (line[:prefix], ellipses, line[-suffix:]))
      elif ending:
        print("%s%s" % (line[:width-len(ellipses)], ellipses))

beginning = False
middle = True
ending = False
ellipses = " ... "

width = BrunoUtils.cols()

arg = 1
if len(sys.argv) > 1:
  if sys.argv[arg] == "--beginning":
    beginning = True
    middle = False
    ending = False
    ellipses = ".... "
    arg += 1
  elif sys.argv[arg] == "--middle":
    beginning = False
    middle = True
    ending = False
    ellipses = " ... "
    arg += 1
  elif sys.argv[arg] == "--ending":
    beginning = False
    middle = False
    ending = True
    ellipses = " ...."
    arg += 1
  elif ((arg+1) < len(sys.argv)) and (sys.argv[arg] == "--width"):
    width = int(sys.argv[arg+1])
    arg += 2
  elif sys.argv[arg].startswith("-"):
    sys.stderr.write("Syntax: %s [--width int] [--beginning|--middle|--ending] [file ...]\n" % sys.argv[0])
    exit(1)

if arg <= len(sys.argv):
  if sys.stdin.isatty():
    sys.stderr.write("stdin is not redirected\n")
    exit(1)
  process(sys.stdin)
else:
  for filename in sys.argv[arg:]:
    with open(filename, "r") as file:
      process(file)
