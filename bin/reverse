#! /usr/bin/env python2

import re
import sys
import logging
import argparse

pgm = sys.argv[0]

parser = argparse.ArgumentParser(description='Reverse data by lines, words, characters')

group = parser.add_mutually_exclusive_group()
group.add_argument('-b', '-c', '--bytes', '--chars', dest='chars', action='store_true', help='Sort by characters')
group.add_argument('-w', '--words', dest='words', action='store_true', help='Sort by words')
group.add_argument('-l', '--lines', dest='lines', action='store_true', help='Sort by lines')

parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

if sys.stdin.isatty():
  parser.error('stdin must be directed')

if (not args.chars) and (not args.words):
  args.lines = True

log.debug('args: {args}'.format(**locals()))

data = sys.stdin.read()
if args.chars:
  if data and (data[-1] == '\n'):
    data = '\n' + data[:-1]
  sys.stdout.write(data[-1::-1])
else:
  lines = data.splitlines()
  if args.lines:
    lines = lines[-1::-1]
  for line in lines:
    if args.words:
      print (' '.join(line.split()[-1::-1]))
    else:
      print line
