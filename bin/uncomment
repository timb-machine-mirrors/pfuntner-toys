#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse

import bruno_tools

def process(source):
  if isinstance(source, str):
    stream = open(source)
  else:
    stream = source

  for line in stream.read().splitlines():
    line = comment_regexp.sub('', line)
    if not all_whitespace_regexp.search(line):
      print(f'{source + ": " if args.name else ""}{line}')

  if isinstance(source, str):
    stream.close()
  
parser = argparse.ArgumentParser(description='Remove comments from files')
parser.add_argument('paths', nargs='*', help='Paths to zero or more files (default: stdin)')
parser.add_argument('-n', '--name', action='store_true', help='Including filename in output')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

comment_regexp = re.compile(r'#.*$')
all_whitespace_regexp = re.compile(r'^\s*$')

if args.paths:
  for path in args.paths:
    process(path)
else:
  if sys.stdin.isatty():
    parser.error('stdin must be redirected if no paths are specified')
  if args.name:
    log.warning('--name has not effect when reading from stdin')
  process(sys.stdin)
