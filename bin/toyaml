#! /usr/bin/env python2

import sys
import json
import logging
import argparse

def uni2str(root):
  if isinstance(root, unicode):
    root = str(root)
  elif isinstance(root, dict):
    for (key, value) in root.items():
      if isinstance(key, unicode):
        del root[key]
      root[str(key)] = uni2str(value)
  elif isinstance(root, list):
    for (pos, value) in enumerate(root):
      root[pos] = uni2str(value)

  return root

parser = argparse.ArgumentParser(description='Convert json to yaml')
parser.add_argument('-f', '--flow', dest='flow', action='store_true', help='Enable default flow style')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging messages')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s') 
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING) 

yaml = None
try:
  yaml = __import__('yaml')
except Exception as e:
  log.critical('Cannot load yaml package: {e!s}'.format(**locals()))
  exit(1)

if sys.stdin.isatty():
  log.critical('stdin must be redirected')
  exit(1)

data = None
try:
  data = json.load(sys.stdin)
except Exception as e:
  log.critical('Cannot load stdin as json: {e!s}'.format(**locals()))
  exit(1)

log.debug('pre uni2str(): {data}'.format(**locals()))
log.debug('post uni2str(): {data}'.format(data=uni2str(data)))

yaml.dump(uni2str(data), sys.stdout, default_flow_style=bool(args.flow))
