#! /usr/bin/env python3

import re
import sys
import string
import random
import signal
import logging
import argparse

def sub(data, pattern, sub_chars):
  last_c = None
  data = [c for c in data]
  for (pos, c) in enumerate(data):
    if (last_c != '\\' or not args.keep_escapes) and re.search(pattern, c):
      data[pos] = random.choice(sub_chars)
    last_c = c
  return ''.join(data)

parser = argparse.ArgumentParser(description='Anonymize data')
parser.add_argument('-e', '-k', '--keep-escapes', action='store_true', help='Do not anonymize escape sequences')
parser.add_argument('-t', '--timestamps', action='store_true', help='Anonymize timestamps')
parser.add_argument('-n', '--numerics', action='store_true', help='Anonymize numerics')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

data = sys.stdin.read()

if args.timestamps or args.numerics:
  if args.timestamps:
    data = re.sub(r'\b\d{10,}(\.\d{3,})?\b', 'SECS_SINCE_EPOCH', data)

    # 2024-12-02T05:41:34Z
    data = re.sub(r'\b\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z\b', 'TIMESTAMP', data)
  if args.numerics:
    data = re.sub(r'\b\d+.\d*\b', 'FLOAT', data)
    data = re.sub(r'\b\.\d+\b', 'FLOAT', data)
    data = re.sub(r'\b\d+\b', 'INTEGER', data)
else:
  letters = [letter for letter in string.ascii_letters]
  digits = [digit for digit in string.digits]
  log.info(f'{letters=} {digits=}')
  data = sub(data, r'^[a-zA-Z]$', letters)
  data = sub(data, r'^\d$', digits)

print(data, end='')
