#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse
import datetime

def parse(line):
  for (pattern, format) in patterns_and_formats:
    match = pattern.search(line)
    if match:
      return (datetime.datetime.strptime(match.group(1), format), line[:match.start(0)], line[match.end(0):])
  return (None, None, None)

def see(timedelta):
  (hours, seconds) = divmod(timedelta.seconds, 60*60)
  (minutes, seconds) = divmod(seconds, 60)
  return f'{hours:02}:{minutes:02}:{seconds:02}.{int(timedelta.microseconds/1000):03}'

parser = argparse.ArgumentParser(description='Show differences in timestamps')
parser.add_argument('-e', '--elapsed', action='store_true', help='Show total elapsed time, not incremental')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

patterns_and_formats = [
  (re.compile(r'(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3})(?:\w+)'), '%Y-%m-%dT%H:%M:%S.%f') # 2024-12-02T08:55:45.921Z
]

last_timestamp = None
for line in sys.stdin.read().splitlines():
  (timestamp, pre, post) = parse(line)
  if timestamp is not None:
    if last_timestamp is not None:
      print(f'{pre}{see(timestamp-last_timestamp)}{post}')
    else:
      print(line)
    if (not args.elapsed) or (last_timestamp is None):
      last_timestamp = timestamp
  else:
    print(line)
