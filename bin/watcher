#! /usr/bin/env python3

import subprocess
import sys
import time
import datetime
import getopt

interval = 5 # seconds

def syntax():
  sys.stderr.write("Syntax: %s [--alert|inform] [--stop-on-error] [--interval=secs] cmd args...\n" % sys.argv[0])
  exit(1)

def dateform(timestamp):
  if timestamp:
    return datetime.datetime.fromtimestamp(timestamp).strftime("%H:%M:%S.%f")
  else:
    return None

def now():
  return dateform(time.time())

opts = []
remaining_args = []
alert = False

try:
  opts, remaining_args = getopt.getopt(sys.argv[1:], "en:", ["interval=", "stop-on-error", "alert", "inform"])
except getopt.GetoptError as err:
  sys.stderr.write("%s\n" % str(err))
  syntax()

stopOnError = False

for opt, arg in opts:
  if opt in ["-n", "--interval"]:
    try:
      interval = float(arg)
    except Exception as e:
      sys.stderr.write("Illegal interval `%s`: %s\n" % (arg, str(e)))
      syntax()
      exit(1)
  elif opt in ["-e", "--stop-on-error"]:
    stopOnError = not stopOnError
  elif opt in ["--alert", "--inform"]:
    alert = not alert
  else:
    syntax()

if len(remaining_args) == 0:
  syntax()

last = None

while True:
  p = subprocess.Popen(remaining_args, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
  p.stdin.close()
  output = p.stdout.read() + p.stderr.read()
  output = output.strip('\n').strip('\r') # .replace('\n', "\\n")
  rc = p.wait()
  multiLine = len(output.split('\n')) > 1
  sys.stdout.write("%s:%s%s%s\n" % (now(), '\n' if multiLine else " ", output, '\n' if multiLine else ""))
  if alert and (last != None) and (last != output):
    p = subprocess.Popen(["inform"], stdin=subprocess.PIPE)
    p.communicate(output)
    p.wait()
  last = output
  if stopOnError and (rc != 0):
    sys.stderr.write("%s exited with %d\n" % (remaining_args, rc))
    break
  else:
    time.sleep(interval)
