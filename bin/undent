#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse

parser = argparse.ArgumentParser(description='Remove common leading blanks from stdin')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

lines = sys.stdin.read().splitlines()

find_regexp = re.compile('^( *)')

# find the common number of blanks.  We'll ignore blank lines
num_blanks = None
for line in lines:
  if line:
    match = find_regexp.search(line)
    if match:
      curr = len(match.group(1))
      num_blanks = curr if (num_blanks is None) or (num_blanks > curr) else num_blanks
log.info(f'num_blanks = {num_blanks}')

if num_blanks:
  sub_regexp = re.compile(f'^ {{{num_blanks}}}')
  for pos in range(len(lines)):
    lines[pos] = sub_regexp.sub('', lines[pos])
else:
  log.warning('No changes to make')

print('\n'.join(lines))
