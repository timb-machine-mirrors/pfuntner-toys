#! /usr/bin/env python

import os
import sys
import base64
import getopt
import getpass
import hashlib
import logging
import argparse

parser = argparse.ArgumentParser(description='Perform fernet encryption/decryption')
parser.add_argument('-d', '--decrypt', dest='decrypt', action='store_true', help='Perform decryption')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

Fernet = None
try:
  from cryptography.fernet import Fernet
except:
  log.critical('Could not load the Fernet class.  Try installing the cryptography package')
  exit(1)

encrypt = not args.decrypt

if sys.stdin.isatty():
  log.critical('stdin must be redirected')
  exit(1)

secret = getpass.getpass('Encryption key: ')

hash = hashlib.md5()
hash.update(secret)
fernet = Fernet(base64.b64encode(hash.hexdigest()))
  
data = sys.stdin.read()
if encrypt:
  result = fernet.encrypt(data)
else:
  result = fernet.decrypt(data)

sys.stdout.write(result)
