#! /usr/bin/env python3

import os
import re
import sys
import signal
import logging
import argparse
import requests
import subprocess
import xml.etree.ElementTree as ET

def dive(node, indent=0):
  spaces = ' ' * (indent*2)
  if node is not None:
    log.debug(f'{spaces}{get_tag(node)} {node.text}')
    for child in node:
      dive(child, indent+1)

def get_tag(node):
  return tag_regexp.sub('', node.tag)

def get_attrs(node):
  attrs = dict()
  for child in node:
    attrs[get_tag(child)] = child.text
  return attrs

parser = argparse.ArgumentParser(description=sys.argv[0])

parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

tag_regexp = re.compile('^|{[^{]+\}')
title_regexp = re.compile('\((\S+).*\)')

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

root = ET.fromstring(sys.stdin.read())
dive(root)
