#! /usr/bin/env python

import re
import logging
import argparse

def process(filename):
  global logs
  try:
    with open(filename) as stream:
      for (linenum, line) in enumerate(stream.read().splitlines()):
        match = regexp.search(line)
        if match:
          method = match.group(1)
          if method != 'setLevel':
            print '{filename}:{linenum} {line}'.format(**locals())
            if method not in logs.keys():
              logs[method] = 1
            else:
              logs[method] += 1

  except Exception as e:
    log.error('Could not process {filename!r}: {e!s}'.format(**locals()))

parser = argparse.ArgumentParser(description='Print out levels being used in Python logging')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
parser.add_argument('files', metavar='file', nargs='+', help='One or more files')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

regexp = re.compile('^\s*log\.(\w+)\(')

logs = {}
map(process, args.files)
print logs
