#! /usr/bin/env python3

import re
import os
import logging
import getpass
import argparse
import datetime
import subprocess

def run(cmd):
  if isinstance(cmd, str):
    cmd = cmd.split()
  log.debug('Executing {cmd}'.format(**locals()))
  try:
    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
  except Exception as e:
    perror('{cmd} threw {e!s}'.format(**locals()))
  else:
    (stdout, stderr) = p.communicate()
    stdout = stdout.decode('utf-8')
    stderr = stderr.decode('utf-8')
    rc = p.wait()
    log.log(logging.DEBUG if (rc == 0) and (not stderr) else logging.ERROR, '{cmd}: {rc}, {stdout!r}, {stderr!r}'.format(**locals()))
    return (rc, stdout, stderr)

parser = argparse.ArgumentParser(description='Show login time for this session')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

(rc, stdout, stderr) = run('tty')
stdout = stdout.splitlines()
if stdout:
  tty = stdout[0]
  user = getpass.getuser()
  regexp = re.compile('^(\S+)\s+(\S+)\s+(\d{4}-\d{2}-\d{2} \d{2}:\d{2})')
  (rc, stdout, stderr) = run('who')
  for line in stdout.splitlines():
    match = regexp.search(str(line))
    log.info('{line!r} {groups}'.format(groups=match.group() if match else None, **locals()))
    if match and (match.group(1) == user) and (os.path.join('/dev', match.group(2)) == tty):
      timestamp = datetime.datetime.strptime(match.group(3), '%Y-%m-%d %H:%M')
      print(str(datetime.datetime.now() - timestamp))
