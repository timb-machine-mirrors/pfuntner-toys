#! /usr/bin/env python3

import os
import sys
import json
import logging
import requests
import argparse
import datetime
import subprocess

class Table(object):
  def __init__(self, *args):
    if len(args) == 1 and type(args[0]) in (list, tuple):
      self.headings = args[0]
    else:
      self.headings = args

    self.p = subprocess.Popen(['column', '-t', '-s\t'], stdin=subprocess.PIPE, text=True)
    self.p.stdin.write('\t'.join([str(heading) for heading in self.headings]) + '\n')

  def add(self, *args):
    self.p.stdin.write('\t'.join([str(arg) for arg in args]) + '\n')

  def close(self):
    self.p.stdin.close()
    self.p.wait()

parser = argparse.ArgumentParser(description='Jenkins job monitor', formatter_class=argparse.RawTextHelpFormatter, epilog="""The credentials must be in the form of "user:token" where:

  user: Your Jenkins userid
  token: a 34-digit hex string

You can create a token through the Jenkins GUI:
  1) Log into Jenkins
  2) Click your name/user in the upper right corner of the page
  3) Look at the URL in the browser to identify your Jenkins user.  For example, my URL is something like "https://foo.bar.com/jenkins/foobar/user/jpfuntne/configure" so my user is jpfuntne.
  4) Click the "Configure" link on left side
  5) Click the "Create new Token" button
  6) Name the token and press the "Generate" button
  7) Copy the token and make a note of it

The credentials can be:
  - expressed on the command line
  - set as an environment variable, perhaps in your shell profile""")

parser.add_argument('-c', '--credentials', '--creds', help='Jenkins credentials (eg. user:token)')

parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
parser.add_argument('jobs', metavar='job', nargs='+', help='URLs to one or more Jenkins job')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

creds = args.credentials or os.environ.get('JENKINS_CREDENTIALS')
if not creds:
  parser.error('Jenkins credentials are not present')
creds = tuple(creds.split(':'))

table = Table('Job', 'Status', 'Started', 'Duration')

for job in args.jobs:
  req = None
  url = f'{job}/api/json?pretty=true'
  log.info(f'url: {url}, auth: {creds}')
  try:
    req = requests.get(url, auth=creds)
  except Exception as e:
    log.warning(f'{url!r} failed: {e!s}')

  log.debug(f'req: {req!s}')

  if req is not None:
    if req.ok:
      attrs = req.json()
      log.debug(f'json: {attrs!s}')
      started = datetime.datetime.fromtimestamp(attrs['timestamp']/1000.0)
      duration = datetime.timedelta(seconds=attrs['duration']/1000.0) if attrs['duration'] else datetime.datetime.now()-started
      table.add(' '.join(attrs['fullDisplayName'].split()[-2:]), (attrs['result'] or 'Running').title(), started, duration)
    else:
      table.add(job, req.text, '', '')

table.close()
