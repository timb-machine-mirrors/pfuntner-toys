#! /usr/bin/env python3

import json
import sys
import re

assert not sys.stdin.isatty(), "stdin must be redirected"

obj = json.load(sys.stdin)

path = []

args = sys.argv[1:]
if len(args) == 1:
  args = args[0].split('/')

for elem in args:
  if re.match("\d+$", elem):
    elem = int(elem)
    if (elem >= 0) and (elem < len(obj)):
      obj = obj[elem]
      path.append(str(elem))
    else:
      assert False, "%d not in /%s" % (elem, '/'.join(path))
  else:
    if elem in obj:
      obj = obj[elem]
      path.append(str(elem))
    else:
      assert False, "%s not in /%s" % (repr(elem), '/'.join(path))

if type(obj) == type([]):
  print("/%s is a %d-element list" % ('/'.join(path), len(obj)))
elif type(obj) == type({}):
  print("/%s is a %d-element dictionary: %s" % ('/'.join(path), len(obj), ', '.join(obj.keys())))
elif type(obj) == type("") or type(obj) == type(u""):
  print("/%s is a string: %s" % ('/'.join(path), repr(obj)))
elif type(obj) == type(0):
  print("/%s is an integer: %d" % ('/'.join(path), obj))
elif type(obj) == type(0.1):
  print("/%s is a float: %f" % ('/'.join(path), obj))
elif type(obj) == type(True):
  print("/%s is a Boolean: %s" % ('/'.join(path), obj))
else:
  assert False, "Don't know how to handle %s" % str(type(obj))
