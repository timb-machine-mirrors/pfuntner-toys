#! /usr/bin/env python3

import logging
import argparse
import subprocess

def run(cmd):
  if isinstance(cmd, str):
    cmd = cmd.split()
  log.info('Executing {cmd}'.format(**locals()))
  p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
  (stdout, stderr) = tuple([s.decode('utf-8') for s in p.communicate()])
  # alternately, if trapping is conditional:
  # if trap:
  #   stdout = stdout.decode('utf-8')
  #   stderr = stderr.decode('utf-8')
  rc = p.wait()
  log.debug('Executed {cmd}: {rc}, {stdout!r}, {stderr!r}'.format(**locals()))
  return (rc, stdout, stderr)

parser = argparse.ArgumentParser(description='Detect packager (yum, apt, dnf) for node')
parser.add_argument('nodes', nargs='*', help='Zero or more node - default: localhost')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

codestring = 'if which apt-get >/dev/null; then echo apt-get; elif which apt >/dev/null; then echo apt; elif which dnf >/dev/null; then echo dnf; elif which yum >/dev/null; then echo yum; else echo Unknown; fi'

if not args.nodes:
  args.nodes = ['localhost']

for node in args.nodes:
  if node == 'localhost':
    (rc, stdout, stderr) = run(['bash', '-c', codestring])
  else:
    (rc, stdout, stderr) = run(['ssh', '-q', node, codestring])
  print(f'{node}: {stdout}', end='' if stdout.endswith('\n') else '\n')
