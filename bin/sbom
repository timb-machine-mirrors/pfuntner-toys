#! /usr/bin/env python3

import sys
import json
import signal
import logging
import argparse

import bruno_tools

parser = argparse.ArgumentParser(description='Use trivy to generate SBOM of a container image')
parser.add_argument('image', help='Container image')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

# trivy image --image-src remote --format cyclonedx "$1" 2>/dev/null | jq -r '.components[] | {Name: .name, Version: .version}'

(rc, stdout, stderr) = bruno_tools.run(f'trivy image --image-src remote --format cyclonedx {args.image}')
if stdout:
  table = bruno_tools.Table('Package', 'Version')
  for package in json.loads(stdout)['components']:
    table.add(package['name'], package['version'])
  table.close()
