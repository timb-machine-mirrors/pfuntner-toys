#! /usr/bin/env python3

import os
import sys
import json
import logging
import argparse
import subprocess

def banner(msg):
  border = '*' * (len(msg) + 4)
  print(border)
  print('* {msg} *'.format(**locals()))
  print(border)

def see(name):
  value = eval(name)
  log.debug('{name}: {value!r}'.format(**locals()))

parser = argparse.ArgumentParser(description='Run my bruno.yml Ansible playbook on one or more systems')
parser.add_argument('hosts', metavar='host', nargs='+', help='One or more hosts')
parser.add_argument('-v', '--verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

real_root = os.path.dirname(os.path.realpath(sys.argv[0]))
playbook = os.path.join(real_root, '..', 'ansible', 'bruno.yml')
see('real_root')
see('playbook')

if not os.path.isfile(playbook):
  parser.error('Cannot locate {playbook!r}'.format(**locals()))

variables = {
  'hosts': ','.join(args.hosts),
  'verbose': bool(args.verbose),
}

for become in [False, True]:
  banner('become: {become}'.format(**locals()))
  cmd = ['ansible-playbook', '-e', json.dumps(variables)] + (['-b'] if become else []) + [playbook]
  see('cmd')

  rc = subprocess.Popen(cmd).wait()
