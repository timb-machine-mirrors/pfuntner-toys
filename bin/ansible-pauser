#! /usr/bin/env python3

import os
import yaml
import signal
import logging
import argparse

def process(root):
  global num
  global stop
  global changing

  if stop:
    return

  assert isinstance(root, list)

  pos = 0
  while not stop and pos < len(root):
    node = root[pos]
    if 'tasks' in node:
      process(node['tasks'])
      pos += 1
    elif 'block' in node:
      process(node['block'])
      pos += 1
    else:
      if changing or node.get('name', '') == args.start:
        changing = True
        num += 1
        root.insert(pos+1, {'name': f'Prompt #{num}', 'pause': { } })
        pos += 2
        if node.get('name', '') == args.stop:
          changing = False
          stop = True
      else:
        pos += 1

parser = argparse.ArgumentParser(description='Add pause task after every task')
parser.add_argument('files', metavar='file', nargs='+', help='One or more task files')
parser.add_argument('--start', help='Do not pause until reaching TASK')
parser.add_argument('--stop', help='Do not pause after reaching TASK')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
# log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

num = 0
stop = False
changing = not bool(args.start)

for filename in args.files:
  if os.path.exists(filename):
    if not os.path.isdir(filename):
      print(filename)
      with open(filename) as stream:
        root = yaml.load(stream, Loader=yaml.BaseLoader)
      if isinstance(root, list):
        process(root)
      with open(filename, 'w') as stream:
        yaml.dump(root, stream)
