#! /usr/bin/env python3

import signal
import logging
import argparse
import subprocess

def run(cmd, stdin=None, capture=True, shell=False):
  if shell:
    if isinstance(cmd, list):
      cmd = ' '.join(cmd)
  elif isinstance(cmd, str):
    cmd = cmd.split()

  log.info('Executing {cmd}'.format(**locals()))

  p = None
  try:
    p = subprocess.Popen(cmd, stdin=subprocess.PIPE if stdin else None, stdout=subprocess.PIPE if capture else None, stderr=subprocess.PIPE if capture else None, shell=shell)
  except Exception as e:
    (rc, stdout, stderr) = (-1, '', f'Caught {e!s} running {cmd!r}')

  if p:
    if stdin:
      p.stdin.write(stdin.encode())
    if capture:
      (stdout, stderr) = tuple([s.decode('utf-8') for s in p.communicate()])
    else:
      (stdout, stderr) = ('', '')
    rc = p.wait()

  log.debug('Executed {cmd}: {rc}, {stdout!r}, {stderr!r}'.format(**locals()))
  return (rc, stdout, stderr)

parser = argparse.ArgumentParser(description='Install Python interpreter on Alpine')
parser.add_argument('target', help='Docker Alpine container')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

"""

"""

(rc, stdout, stderr) = run(['docker', 'exec', '-it', args.target, 'sh', '-c', 'python3 --version'])
if rc == 0:
  if '3.' in stdout:
    print(f'Python3 is already present on {args.target}')
  else:
    print(f'Python command passed but check failed: {stdout!r}, {stderr!r}')
else:
  print(f'Installing Python3 on {args.target}')
  (rc, stdout, stderr) = run([
                              'docker',
                              'exec',
                              '-it',
                              args.target,
                              'sh',
                              '-c',
                              'apk add --no-cache python3 py3-pip && rm -rf /usr/lib/python*/ensurepip && pip3 install --upgrade pip setuptools && rm -rf /root/.cache'
                             ],
                             capture=False)
  exit(rc)
