#! /usr/bin/env python2

import re
import sys
import json
import logging
import argparse

def see(expr, value=None):
  if value is None:
    value = eval(expr)
  log.debug('{expr}: {value!r}'.format(**locals()))

def isempty(s):
  return not(comment_regexp.sub('', s).strip())

parser = argparse.ArgumentParser(description='Read an INI file')
parser.add_argument('-v', '--verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

section_regexp = re.compile(r'^\[(.+)\]$')
kv_regexp = re.compile('^\s*(\S+)\s*=\s*(.+)\s*$')

comment_regexp = re.compile(r'#.*$')

section = None

data = {}

for line in sys.stdin.read().splitlines():
  if not isempty(line):
    match = section_regexp.search(line)
    if match:
      section = match.group(1)
      see('section')
      data[section] = {}
    elif section:
      match = kv_regexp.search(line)
      if match:
        data[section][match.group(1)] = match.group(2)
      else:
        parser.error('Don\'t understand: {line!r}'.format(**locals()))

print json.dumps(data, indent=2, sort_keys=True)
