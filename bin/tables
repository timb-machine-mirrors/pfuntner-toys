#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse

# import bruno_tools

def make_table_row(tokens):
  global in_table
  if not in_table:
    print('''<table border='1'>''')
    tag = 'th'
  else:
    tag = 'td'
  print('  <tr>')
  for token in tokens:
    print(f'    <{tag}>{token}</{tag}>')
  print('  </tr>')
  in_table = True

def close_table():
  global in_table
  if in_table:
    print('</table>')
    in_table = False

parser = argparse.ArgumentParser(description='Convert one or more fixed-width text tables into HTML tables')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

in_table = False

for line in [line.strip() for line in sys.stdin.read().splitlines()]:
  if line:
    tokens = re.split(r'\s{2,}', line)
    if len(tokens) > 1:
      make_table_row(tokens)
    else:
      close_table()
      print(f'<p>{line}</p>')
close_table()
