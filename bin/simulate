#! /usr/bin/env python3

import sys
import time
import signal
import logging
import argparse

parser = argparse.ArgumentParser(description='Simulate a command')
parser.add_argument('-o', '--stdout', action='append', help='Specify data to write to stdout')
parser.add_argument('-e', '--stderr', action='append', help='Specify data to write to stderr')
parser.add_argument('-w', '--wait', type=float, help='Specify time period in seconds to wait')
parser.add_argument('-s', '--status', type=int, help='Specify exit status')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

time.sleep(args.wait or 0)

if args.stdout:
  sys.stdout.write('\n'.join(args.stdout) + '\n')

if args.stderr:
  sys.stderr.write('\n'.join(args.stderr) + '\n')

exit(args.status or 0)
