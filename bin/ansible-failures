#! /usr/bin/env python3

import sys
import json
import signal
import logging
import argparse

from table import Table

class Key(object):
  def __init__(self, *args):
    self.args = list(args)
    self.key = '\x00'.join(args)

  def __str__(self):
    return repr(self.key)

  def __eq__(self, other):
    return self.key == other.key

  def __hash__(self):
    ret = hash(self.key)
    log.debug(f'__hash__({self!s}) = {ret}')
    return ret

parser = argparse.ArgumentParser(description='Reveal failures from Ansible playbook')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

try:
  tasks = json.load(sys.stdin)
except Exception as e:
  parser.error('Could not parse stdin - is it output from ansible-tasks?')

"""
  {
    "Item": "",
    "Role": "",
    "Task": "Run ansible-role-clamav",
    "Task type": "play",
    "aws-amazonlinux": "",
    .
    .
    .
    "gcp-ubuntu2004": ""
  },
"""

table = Table('Host', 'Role', 'Task', 'Items')

keys = dict()
reserved_keys = ['Item', 'Role', 'Task', 'Task type']
for task in tasks:
  for (host, value) in task.items():
    if host not in reserved_keys and value == 'failed':
      # table.add(host, task['Role'], task['Task'], task['Item'])
      key = Key(host, task['Role'], task['Task'])
      if key not in keys:
        keys[key] = list()
      keys[key].append(task['Item'] or 'None')

for (key, items) in keys.items():
  log.info(f'{key!s}: {items}')
  table.add(key.args + [', '.join(items)])

print(str(table), end='')
