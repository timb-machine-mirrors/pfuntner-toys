#! /usr/bin/env python3

import os
import re
import sys
import signal
import logging
import argparse

def process(stream):
  print('\n'.join(regexp.findall(stream.read())))
  
parser = argparse.ArgumentParser(description='Extract words from files')
parser.add_argument('paths', nargs='*', help='Paths to files (default: stdin)')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

regexp = re.compile(r'\b\w+\b')
errors = 0

for path in args.paths or [sys.stdin]:
  if isinstance(path, str):
    if not os.path.exists(path):
      log.warning(f'Cannot find {path!r}')
      errors += 1
      continue
    elif os.path.isdir(path):
      log.warning(f'Cannot process directory {path!r}')
      errors += 1
      continue
    else:
      stream = open(path)
  else:
    if sys.stdin.isatty():
      parser.error('Specify path(s) or redirect stdin')
    stream = sys.stdin

  process(stream)
  if isinstance(path, str):
    stream.close()

exit(0 if errors == 0 else 1)
