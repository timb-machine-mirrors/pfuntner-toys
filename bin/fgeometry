#! /usr/bin/env python3

import os
import signal
import logging
import argparse

from table import Table

parser = argparse.ArgumentParser(description='Calculate `geometry` of files')
parser.add_argument('files', metavar='file', nargs='+', help='One or more paths to files')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

table = Table('filename', 'columns', 'lines')

for filename in args.files:
  if os.path.exists(filename):
    if not os.path.isdir(filename):
      with open(filename, 'rb') as stream:
        lines = stream.read().splitlines()
      table.add(filename, max([len(line) for line in lines]) if lines else 0, len(lines))

print(str(table), end='')
