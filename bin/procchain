#! /usr/bin/env python3

import re
import os
import logging
import argparse
import subprocess

parser = argparse.ArgumentParser(description='Show process chain from current process')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

cmd = ['ps', '-eo', 'pid,ppid,etime,args']
p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
(stdout, stderr) = p.communicate()
stdout = stdout.decode('utf-8')
stderr = stderr.decode('utf-8')
rc = p.wait()
log.debug(f'{cmd}: {rc}, {stdout!r}, {stderr!r}')

regexp = re.compile(r'^\s*(\d+)\s+(\d+)')

processes = []
lines = stdout.decode('utf-8').splitlines()
headings = lines[0] if lines else ''

curr = os.getpid()
while True:
  for line in lines[1:]:
    log.debug(f'processing: {line!r}')
    match = regexp.search(line)
    if match:
      (pid, ppid) = (int(match.group(1)), int(match.group(2)))
      if curr == pid:
        processes.insert(0, line)
        curr = ppid
        break
  else:
    break

if processes:
  print(headings)
  print('\n'.join(processes))
