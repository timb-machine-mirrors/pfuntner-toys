#! /usr/bin/env python3

"""
From https://www.scivision.dev/git-windows-chmod-executable/

"When interacting between Windows and Unix filesystems using Git, setting a file to be executable takes a particular Git command from the Windows computer. With standalone Unix systems, just chmod +x myfile.sh is tracked by Git. However, with Windows Subsystem for Linux or Cygwin, this chmod +x change is not tracked if the file resides on a Windows filesystem and not within the WSL internal filesystem."

This script will turn on the execute bit in git:

  git update-index --chmod=+x /path/to/exe
"""

import os
import sys
import signal
import logging
import argparse

import bruno_tools

parser = argparse.ArgumentParser(description='Force execute bit in git')
parser.add_argument('paths', metavar='path', nargs='+', help='Path to one or more files')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if not os.path.exists('/proc/sys/fs/binfmt_misc/WSLInterop'):
  log.warning('This does not appear to be a WSL environment so this command is useless here')
  exit(0)

initial_directory = os.curdir
for path in args.paths:
  if not os.path.exists(path):
    log.warning(f'Does not exist: {path!r}')
    continue

  if os.path.isdir(path):
    log.warning(f'Not a file: {path!r}')
    continue

  os.chdir(os.path.dirname(path))
  
  bruno_tools.run(f'git update-index --chmod=+x {os.path.basename(path)}', capture=False)

  os.chdir(initial_directory)
