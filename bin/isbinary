#! /usr/bin/env python2

import sys
import os
import string
import getopt

def process(file, name):
  global verbose, wantText, wantBinary

  desired = False

  # read the data in blocks to allow for interrupts
  data = ""
  done = False
  while not done:
    block = file.read(32768)
    if block:
      data += block
    else:
      done = True

  orig = data
  isEmpty = len(data) == 0
  data = data.translate(string.maketrans('',''), string.printable) # remove printables and whitespace
  if isEmpty:
    status = "empty"
  else:
    status = "text" if len(data) == 0 else "binary"

  if verbose:
    print "%s: %s" % (name, status)
    desired = True

    if details:
      for pos in range(len(orig)):
        c = orig[pos]
        if c not in string.printable:
          print "%8d %s" % (pos, repr(c))
  elif wantText and (status == "text"):
    print name
    desired = True
  elif wantBinary and (status == "binary"):
    print name
    desired = True

  return 0 if desired else 1

exceptions = 0

wantText = False
wantBinary = False

pgm = os.path.basename(sys.argv[0])
if pgm.startswith("istext"):
  wantText = True
elif pgm.startswith("isbin"):
  wantBinary = True

verbose = not (wantText or wantBinary)
details = False

(opts,args) = getopt.getopt(sys.argv[1:], "vd", ["verbose", "details"])
for (opt,arg) in opts:
  if opt in ["-v", "--verbose"]:
    verbose = True
  elif opt in ["-d", "--details"]:
    details = not details

if not args:
  assert not sys.stdin.isatty(), "stdin is not redirected"
  verbose = True
  exceptions += process(sys.stdin, "<stdin>")
else:
  for filename in args:
    try:
      file = open(filename)
      exceptions += process(file, filename)
      file.close()
    except Exception as e:
      if verbose:
        print e

if exceptions > 0:
  exit(1)
