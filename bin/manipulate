#! /usr/bin/env python3

"""
  Make changes to a stream.  Here's an example:

    ibmadmin@pfuntner-dev-0:~/fcm/issues/collectd$ date | manipulate '(\S+)' 'hit[::-1]'
    euT Jun  6 09:49:03 EDT 2017
    ibmadmin@pfuntner-dev-0:~/fcm/issues/collectd$

  Notes:
    - The first parameter must be a regular expression and must have one or more subexpressions.  If there are no
      subexpressions, the script will fail
    - The *LAST* subexpression is the one that can be changed
    - The second parameter is a Python expression to change the string and will be automatically cast to a string
    - The `hit` variable contains the string that matched the regular expression for easy manipulation
    - If a line does not match the regular expression, it is simply printed as-is
    - You can use one or more --import/-i options to import a module you need to use
"""

import re
import sys
import getopt
import importlib

(opts,args) = getopt.getopt(sys.argv[1:], "i:", ["import="])
for (opt,arg) in opts:
  if opt in ["-i", "--import"]:
    globals()[arg] = importlib.import_module(arg)

assert not sys.stdin.isatty(), "stdin must be directed"
assert len(args) == 2, "Syntax: %s [-i module1 -i module2 ... ] regexp expression" % sys.argv[0]

regexp = re.compile(args[0])

for line in sys.stdin:
  line = line.strip('\n')
  match = regexp.search(str(line))
  if match:
    # print "Groups: %s" % str(match.groups())
    pos = len(match.groups())-1
    hit = match.groups()[pos]
    line = line[:match.start(pos)] + eval(args[1]) + line[match.end(pos):]
  print(line)
