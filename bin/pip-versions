#! /usr/bin/env python3

# inspired by https://stackoverflow.com/questions/4888027/python-and-pip-list-all-versions-of-a-package-thats-available

import sys
import json
import signal
import logging
import requests
import argparse
import subprocess
# from distutils.version import StrictVersion

class Table(object):
  def __init__(self, *args):
    if len(args) == 1 and type(args[0]) in (list, tuple):
      self.headings = args[0]
    else:
      self.headings = args

    self.p = subprocess.Popen(['column', '-t', '-s\t'], stdin=subprocess.PIPE, text=True)
    self.p.stdin.write('\t'.join([str(heading) for heading in self.headings]) + '\n')

  def add(self, *args):
    self.p.stdin.write('\t'.join([str(arg) for arg in args]) + '\n')

  def close(self):
    self.p.stdin.close()
    self.p.wait()

def pip_info(package_name):
  req = requests.get(f'https://pypi.org/pypi/{package_name}/json')
  return req.json()['releases']

parser = argparse.ArgumentParser(description='Find versions of a Python package (pip)')
parser.add_argument('packages', metavar='package', nargs='+', help='One or more Python packages to query')
parser.add_argument('-a', '--all', action='store_true', help='Report additional information in tabular form')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if args.all:
  table = Table('Package', 'Version', 'Date', 'Requires')

for package in args.packages:
  for (version, info) in pip_info(package).items():
    if info:
      if args.all:
        table.add(package, version, info[0].get('upload_time'), info[0].get('requires_python'))
      else:
        print(f'{package} {version}')

if args.all:
  table.close()
