#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse
import datetime

def seconds_since_epoch(line):
  # 1733755665.835
  match = re.search(r'(\d{10}(\.\d{3,})?)', line)
  if match:
    timestamp = datetime.datetime.fromtimestamp(float(match.group(1)))  
    return (f'{line[:match.start(1)]}{timestamp.isoformat()}{line[match.end(1):]}', True)
  else:
    return (line, False)

parser = argparse.ArgumentParser(description='Replace timestamps with a standard ISO timestamp')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

parsers = [seconds_since_epoch]

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

for line in sys.stdin.read().splitlines():
  for parser in parsers:
    (line, changed) = parser(line)
    if changed:
      break
  print(line)
