#! /usr/bin/env python3

import sys
import signal
import string
import logging
import argparse

import bruno_tools

def process(source):
  global data

  stream = open(source) if isinstance(source, str) else source

  for c in stream.read():
    if c in data.keys():
      curr = source if isinstance(source, str) else 'stdin'
      data[c][curr] = data[c].get(curr, 0) + 1

  if isinstance(source, str):
    stream.close()

parser = argparse.ArgumentParser(description='Look for special characters in files')
parser.add_argument('paths', nargs='*', help='Zero or more files to check')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

data = { c: dict() for c in string.punctuation }

if args.paths:
  for path in args.paths:
    process(path)
else:
  if sys.stdin.isatty():
    parser.error('stdin must be redirected if no files are specified')
  process(sys.stdin)

table = bruno_tools.Table(*(['Char'] + (args.paths or ['stdin'])))
for c in data.keys():
  row = [c]
  if args.paths:
    for path in args.paths:
      row.append(data[c].get(path, 0))
  else:
    row.append(data[c].get('stdin', 0))
  table.add(*row)
table.close()
