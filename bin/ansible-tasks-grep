#! /usr/bin/env python3

import re
import os
import sys
import json
import yaml
import logging
import argparse

def process(root):
  if isinstance(root, list):
    for item in root:
      process(item)
  elif isinstance(root, dict):
    if 'block' in root.keys():
      process(root['block'])
    else:
      if regexp.search(str(root)):
        if args.style == 'linear':
          print(f'{filename}: {root}')
        elif args.style == 'json':
          print(filename)
          print('\n'.join(json.dumps(root, indent=2).splitlines()[1:-1]))
          print()

parser = argparse.ArgumentParser(description='Search Ansible task/handlers')
parser.add_argument('pattern', help='Regular expression with which to search')
parser.add_argument('files', metavar='file', nargs='*', help='One or more stdout files from running Ansible playbooks')
parser.add_argument('-s', '--style', default='linear', choices=['linear', 'json'], help='Choose output style (default: linear)')
parser.add_argument('-i', '--ignore-case', action='store_true', help='Ignore case')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

regexp = re.compile(args.pattern, flags=re.IGNORECASE if args.ignore_case else 0)

for filename in args.files:
  if os.path.isfile(filename):
    with open(filename) as stream:
      process(yaml.load(stream, Loader=yaml.BaseLoader))
  else:
    log.warning(f'Cannot process {filename!r}')
