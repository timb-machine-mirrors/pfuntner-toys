#! /usr/bin/env python3

import re
import logging
import argparse
import subprocess

from ansiblehelper import AnsibleHelper

parser = argparse.ArgumentParser(description='Retrieve host information from Ansible inventory')
parser.add_argument('host', help='The name of the target host')

group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('-u', '--user', action='store_true', help='Extract user')
group.add_argument('-i', '--ip', action='store_true', help='Extract IP')
group.add_argument('-k', '--key', action='store_true', help='Extract key')

parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

log.debug(f'args: {args}')

try:
  host = AnsibleHelper.get_host(args.host)
except Exception as e:
  parser.error(str(e))
else:
  log.debug(f'{args.host}: {host}')

  if args.user:
    print(host['ansible_user'])
  elif args.ip:
    print(host['ansible_host'])
  elif args.key:
    print(host['ansible_ssh_private_key_file'])
  else:
    parser.error('Unexpected extraction!?')
