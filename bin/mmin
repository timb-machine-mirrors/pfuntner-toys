#! /usr/bin/env python3

import re
import signal
import logging
import argparse

regexp = re.compile(r'^(?:(\d+)d)?(?:(\d+)h)?(?:(\d+)m)?$')

parser = argparse.ArgumentParser(description='Generate a `find -mmin` parameter')
parser.add_argument('time', help='Time expression in form: ' + regexp.pattern)
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
# log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

match = regexp.search(args.time)
log.info('match: {}'.format(match.groups() if match else None))
if match:
  mins = int(match.group(1) or 0) * 24*60 + int(match.group(2) or 0) * 60 + int(match.group(3) or 0)
  print(mins)
else:
  parser.error(f'{args.time!r} does not match {regexp.pattern!r}')
