#! /usr/bin/env python3

import re
import sys
import signal
import logging
import argparse

import xml.etree.ElementTree as ET

def remove_namespace(tag):
  return re.sub(r'^\{[^}]+\}', '', tag)

def visit(root, indent=0):
  tag = remove_namespace(root.tag) if args.remove_namespaces else root.tag
  print(f'{" "*(indent*2)}<{tag}{" " + (" ".join([f"{key}={value!r}" for (key,value) in root.attrib.items()])) if root.attrib else ""}>{(root.text or "").strip()}')
  for node in root:
    visit(node, indent+1)
  print(f'{" "*(indent*2)}</{tag}>{(root.tail or "").strip()}')

parser = argparse.ArgumentParser(description='Parse an XML document and reform it')
parser.add_argument('path', help='Path to XML file')
parser.add_argument('-r', '--remove-namespaces', action='store_true', help='Remove namespaces from tags')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

root = ET.parse(args.path).getroot()
visit(root)
