#! /usr/bin/env python3

import re
import os
import sys
import logging
import argparse

def process(source):
  stream = None

  if isinstance(source, str):
    filename_prefix = f'{source}: '
    if os.path.exists(source):
      if not os.path.isdir(source):
        stream = open(source, 'rb')
      else:
        log.warning(f'{source!r} is a directory')
    else:
      log.warning(f'Cannot find {source!r}')
  else:
    filename_prefix = ''
    stream = sys.stdin

  if stream:
    for line in stream.read().splitlines():
      hits = regexp.findall(line)
      for hit in hits:
        print(f'{filename_prefix}{hit.decode()!r}')

    if isinstance(source, str):
      stream.close()

parser = argparse.ArgumentParser(description='Perform re.findall on stdin')
parser.add_argument('regexp', help='Regular expression with which to search')
parser.add_argument('files', metavar='file', nargs='*', help='Zero or more files to process')
parser.add_argument('-v', '--verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

if not args.files and sys.stdin.isatty():
  parser.error('stdin must be redirected if no filenames are specified on command line')

regexp = re.compile(args.regexp.encode())

if args.files:
  for filename in args.files:
    process(filename)
else:
  process(sys.stdin)
