#! /usr/bin/env python3

import sys
import json
import signal
import logging
import argparse

parser = argparse.ArgumentParser(description='Process nearly-JSON daa')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  parser.error('stdin must be redirected')

for line in sys.stdin.read().splitlines():
  log.debug(f'Processing: {line!r}')
  if line:
    obj = None
    if line[-1] == '}':
      pos = line.find('{')
      if pos >= 0:
        line = line[pos:].replace('%!(PACKER_COMMA)', ',')
        log.debug(f'Transformation: {line!r}')
        try:
          obj = json.loads(line)
        except Exception as e:
          log.debug(f'Caught: {e!s}')
    if obj:
      print(json.dumps(obj, indent=2, sort_keys=True))
    else:
      log.debug('Could not transform line')
