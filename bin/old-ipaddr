#! /usr/bin/env python2

import subprocess
import sys
import string
import re

"""
  Classic Linux style:
    eth0      Link encap:Ethernet  HWaddr 00:50:56:b4:0f:2f  
              inet addr:10.47.12.150  Bcast:10.47.12.255  Mask:255.255.255.0
              inet6 addr: fe80::250:56ff:feb4:f2f/64 Scope:Link
    .
    .
    .
    
    lo        Link encap:Local Loopback  
              inet addr:127.0.0.1  Mask:255.0.0.0
              inet6 addr: ::1/128 Scope:Host

  Weird-ass style on LinuxOne:
    br-7926d900730b: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
            inet 172.18.0.1  netmask 255.255.0.0  broadcast 0.0.0.0
            inet6 fe80::42:e8ff:fe0c:4015  prefixlen 64  scopeid 0x20<link>
            ether 02:42:e8:0c:40:15  txqueuelen 0  (Ethernet)
            RX packets 50573  bytes 6082405 (5.8 MiB)
            RX errors 0  dropped 0  overruns 0  frame 0
            TX packets 38301  bytes 12621698 (12.0 MiB)
            TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
    
    docker0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
            inet 172.17.0.1  netmask 255.255.0.0  broadcast 0.0.0.0
            ether 02:42:e5:9a:11:26  txqueuelen 0  (Ethernet)
            RX packets 0  bytes 0 (0.0 B)
            RX errors 0  dropped 0  overruns 0  frame 0
            TX packets 0  bytes 0 (0.0 B)
            TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
    
    enccw0.0.1000: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
            inet 148.100.5.40  netmask 255.255.254.0  broadcast 148.100.5.255
            inet6 2620:91:0:653:a1:11ff:fe0e:ea5b  prefixlen 64  scopeid 0x0<global>
            inet6 fe80::a1:11ff:fe0e:ea5b  prefixlen 64  scopeid 0x20<link>
            ether 02:a1:11:0e:ea:5b  txqueuelen 1000  (Ethernet)
            RX packets 822885  bytes 30222710 (28.8 MiB)
            RX errors 0  dropped 0  overruns 0  frame 0
            TX packets 55405  bytes 12678003 (12.0 MiB)
            TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
    
    lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
            inet 127.0.0.1  netmask 255.0.0.0
            inet6 ::1  prefixlen 128  scopeid 0x10<host>
            loop  txqueuelen 1  (Local Loopback)
            RX packets 4  bytes 340 (340.0 B)
            RX errors 0  dropped 0  overruns 0  frame 0
            TX packets 4  bytes 340 (340.0 B)
            TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
    
"""

verbose = ("-v" in sys.argv) or ("--verbose" in sys.argv)

if "linux" in sys.platform:
  p = subprocess.Popen(["ifconfig"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
  (stdout, stderr) = p.communicate()
  rc = p.wait()
  if rc != 0:
    sys.stderr.write(stderr)
    exit(rc)
  
  if verbose:
    print stdout
    print ""
  
  interface = None
  for line in stdout.split('\n'):
    tokens = line.split()
    if len(tokens) > 1:
      if not interface and len(line) > 0:
        if line[0] in string.lowercase:
          interface = tokens[0].strip(':')
          if interface == "lo":
            interface = None # we don't want the loopback after all
      elif "inet addr:" in line:
        ipaddr = tokens[1][5:]
        bytes = [int(token) for token in ipaddr.split('.')]
        if bytes[0] not in [39, 192, 127, 172]:
          print "%s%s" % (ipaddr, " (%s)" % interface if verbose else "")
        interface = None
      elif tokens[0] == "inet":
        ipaddr = tokens[1]
        bytes = [int(token) for token in ipaddr.split('.')]
        if bytes[0] not in [39, 192, 127, 172]:
          print "%s%s" % (ipaddr, " (%s)" % interface if verbose else "")
        interface = None

elif "win" in sys.platform:

  # Wireless LAN adapter Wireless Network Connection:

  #    Connection-specific DNS Suffix  . : raleigh.ibm.com
  #    IPv6 Address. . . . . . . . . . . : 2620:1f7:853:3846::1:42
  #    Link-local IPv6 Address . . . . . : fe80::2583:1b7a:ed7:7af6%23
  #    IPv4 Address. . . . . . . . . . . : 9.27.95.171
  #    Subnet Mask . . . . . . . . . . . : 255.255.254.0
  #    Default Gateway . . . . . . . . . : fe80::1%23
  #                                        9.27.94.1

  p = subprocess.Popen(["ipconfig"], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
  (stdout, stderr) = p.communicate()
  rc = p.wait()
  if rc != 0:
    sys.stderr.write(stderr)
    exit(rc)
  
  if verbose:
    sys.stdout.write(stdout)

  lines = stdout.split('\n')
  lineno = 0
  enabled = False
  while lineno < len(lines):
    line = lines[lineno].strip('\r')
    if re.match("[A-Z]", line) and ("VirtualBox" not in line):
      lineno += 1
      enabled = True
      # print "Enabled by `%s` (%d)" % (line, lineno)
    elif enabled:
      if re.match("  ", line):
        match = re.search("IPv4 Address.*(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})", line)
        if match:
          print match.group(1)
      else:
        enabled = False
        # print "Disabled by `%s` (%d)" % (line, lineno)

    lineno += 1

else:
  sys.stderr.write("Giving up on platform `%s`\n" % sys.platform)
  exit(1)
