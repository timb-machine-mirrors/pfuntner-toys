#! /usr/bin/env python3

import re
import sys
import json
import yaml
import signal
import logging
import argparse

# import bruno_tools

def yaml_load(source):
  return yaml.load(source, Loader=yaml.BaseLoader)

def process(source):
  if isinstance(source, str):
    loader = yaml_load if re.match(r'.*\.ya?ml$', source, flags=re.IGNORECASE) else json.load
    with open(source) as stream:
      vars = loader(stream)

  else:
    data = sys.stdin.read()
    vars = None
    try:
      vars = json.loads(data)
    except Exception as e:
      log.info(f'Could not load stdin as json: {e!s}')

    if vars is None:
      try:
        vars = yaml_load(data)
      except Exception as e:
        log.info(f'Could not load stdin as yaml: {e!s}')

    if vars is None:
      log.error('Could not load stdin as either json or yaml')
      exit(1)

  if isinstance(vars, dict):
    if vars:
      print('\n'.join(vars.keys()))
  else:
    log.error(f'{source if isinstance(source, str) else "stdin"} is not a dictionary')

parser = argparse.ArgumentParser(description='Show keys in JSON/YAML dictionary files')
parser.add_argument('files', metavar='file', nargs='*', help='Zero or more files')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if not args.files and sys.stdin.isatty():
  parser.error('stdin must be redirected if you supply no files')

for source in args.files or [sys.stdin]:
  process(source)
