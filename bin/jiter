#! /usr/bin/env python3

import os
import sys
import json
import signal
import logging
import argparse

parser = argparse.ArgumentParser(description='Perform interactive JSON operations')
parser.add_argument('filename', help='Path to file to read')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

if sys.stdin.isatty():
  sys.stderr.write('Enter interactive statements:\n')
tasks = sys.stdin.read()

if os.path.exists(args.filename):
  if not os.path.isdir(args.filename):
    with open(args.filename) as stream:
      root = json.load(stream)
    if isinstance(root, list):
      pos = 0
      while pos < len(root):
        node = root[pos]
        exec(tasks)
        if node is None:
          del(root[pos])
        else:
          pos += 1
      json.dump(root, sys.stdout, indent=2, sort_keys=True)
    else:
      parser.error('JSON root object must be a list')
  else:
    parser.error(f'{args.filename!r} is a directory')
else:
  parser.error(f'Could not find {args.filename!r}')
