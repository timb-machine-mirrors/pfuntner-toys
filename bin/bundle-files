#! /usr/bin/env python3

import io
import os
import sys
import gzip
import shlex
import base64
import signal
import logging
import argparse

parser = argparse.ArgumentParser(description='Bundle a tarball in a self-extracting script')
parser.add_argument('cmd', nargs='+', help='Command and arguments to drive the files in the tarball once they\'re deployed')
parser.add_argument('-z', '--gzip', action='store_true', help='Treat tarball as gzipped')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger(sys.argv[0])
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

if sys.stdin.isatty():
  parser.error('stdin must be redirected from a tarball')

encoding = base64.b64encode(sys.stdin.buffer.read())

print(f"""#! /usr/bin/env bash
cd "$(dirname $0)"
echo {encoding.decode()} | base64 -d | tar -x{"z" if args.gzip else ""}f -
{shlex.join(args.cmd)}""")
