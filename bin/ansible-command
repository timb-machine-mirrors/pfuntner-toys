#! /usr/bin/env python3

import logging
import argparse
import subprocess

def run(cmd, stdin):
  log.info('Executing {cmd}'.format(**locals()))
  p = subprocess.Popen(cmd, stdin=subprocess.PIPE)
  p.stdin.write(playbook.encode('utf-8'))
  p.stdin.close()
  rc = p.wait()
  log.debug('Executed {cmd}: {rc}'.format(**locals()))

parser = argparse.ArgumentParser(description='Run an command with Ansible shell module across specified hosts')
parser.add_argument('hosts', help='Comma-delimited list of hosts')
parser.add_argument('cmd', nargs='+', help='Command and arguments')
parser.add_argument('-b', '--become', action='store_true', help='Run with sudo')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
# log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

command = ' '.join(args.cmd)
hosts = ' '.join(args.hosts.split(','))
become = bool(args.become)
playbook = f"""- name: {command!r}
  hosts: {hosts}
  tasks:
    - name: Execute
      shell: {command!r}
      register: execute

    - name: Dump
      debug:
        var: execute
  become: {become}"""

log.debug(f'playbook: {playbook!r}')

run(['bash', '-c', 'ansible-playbook <(cat)'], stdin=playbook)
