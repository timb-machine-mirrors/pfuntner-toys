#! /usr/bin/env python

"""
Simplify log messages

This assumes log messages of the forms:

  date       time         level filename lineno pid   tid             msg
  2019-02-27 10:00:24,615 DEBUG ./ultralogs:128 23580 139859126458176 MSG ...

  date       time         level filename       lineno msg
  2019-05-23 14:28:46,763 INFO ./docker-health.py:494 MSG
"""

import os
import re
import sys
import logging
import argparse

parser = argparse.ArgumentParser(description='Parse out message from a Python of a specific format')
parser.add_argument('-s', '--simple', action='store_true', help='Do even more simplification')
parser.add_argument('-v', '--verbose', dest='verbose', action='store_true', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)

assert not sys.stdin.isatty(), 'stdin must be redirected'

# 2019-02-27 10:00:24,615 DEBUG ./ultralogs:128 23580 139859126458176 MSG ...
regexps = [
  re.compile('^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3} \S+ ([^:]+):(\d+) \d+ \d+ (.+)$'),
  re.compile('^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3} \S+ ([^:]+):(\d+) (.+)$'),
]

for line in sys.stdin.read().splitlines():
  for regexp in regexps:
    match = regexp.search(line)
    log.debug('{line!r} {groups}'.format(
      line=line,
      groups=match.groups() if match else None
    ))
    if match:
      base = os.path.basename(match.group(1))
      linenum = match.group(2)
      msg = match.group(3)
  
      print '{base}:{linenum} {msg}'.format(**locals())
      break
