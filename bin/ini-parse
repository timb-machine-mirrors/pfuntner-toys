#! /usr/bin/env python3

import sys
import json
import logging
import argparse
import configparser

def process(filename=None):
  global output

  if filename:
    stream = open(filename)
    output[filename] = {}
    root = output[filename]
  else:
    stream = sys.stdin
    root = output

  config = configparser.ConfigParser(strict=strict)
  config.read_file(stream)
  for section in config.sections():
    root[section] = dict(config[section]) 

  if filename:
    stream.close()
  
parser = argparse.ArgumentParser(description='Using configparser to read a ini file')
parser.add_argument('files', metavar='file', nargs='*', help='Names of zero or more ini file to read')
parser.add_argument('-s', '--strict', action='count', help='Toggle `strict` flag - default: True')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

strict = bool((1 + (args.strict or 0)) % 2)
log.info(f'strict={strict}')

output = {}

if args.files:
  list(map(process, args.files))
else:
  if sys.stdin.isatty():
    parser.error('stdin must be directed if a filename is not specified on command line')
  process()

json.dump(output, sys.stdout, indent=2, sort_keys=True)
print('')
