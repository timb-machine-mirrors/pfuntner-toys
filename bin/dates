#! /usr/bin/env python3

import signal
import logging
import argparse
import datetime

from table import Table

parser = argparse.ArgumentParser(description='Convert strings to timestamps')
parser.add_argument('strings', metavar='string', nargs='+', help='One or more strings to interpret as a timestamp')
parser.add_argument('-v', '--verbose', action='count', help='Enable debugging')
args = parser.parse_args()

logging.basicConfig(format='%(asctime)s %(levelname)s %(pathname)s:%(lineno)d %(msg)s')
log = logging.getLogger()
# log.setLevel(logging.DEBUG if args.verbose else logging.WARNING)
log.setLevel(logging.WARNING - (args.verbose or 0)*10)

signal.signal(signal.SIGPIPE, lambda signum, stack_frame: exit(0))

date_strings = [
  '%m/%d/%Y',
  '%m/%d/%y',
  '%m/%d',
  '%Y-%m-%d',
  '%y-%m-%d',
  '%Y-%m',
  '%b %d',
  '%B %d',
  '%b %d, %Y',
  '%B %d, %Y',
  '%b %d %Y',
  '%B %d %Y',
  None,
]

time_strings = [
  '%H:%M:%S',
  '%H:%M',
  '%I:%M:%S%p',
  '%I:%M%p',
  None,
]

fmt_strings = list()

table = Table(
  'String',
  'Unix',
  'isotime',
  'Secs since epoch',
)

epoch = datetime.datetime.fromtimestamp(0)

for date_string in date_strings:
  for time_string in time_strings:
    components = list()
    if date_string is not None:
      components.append(date_string)
    if time_string is not None:
      components.append(time_string)
    if components:
      fmt_strings.append(' '.join(components))
log.debug(f'fmt_string: {fmt_strings}')

for curr in args.strings:
  ts = None

  if curr == 'now':
    ts = datetime.datetime.now()
  else:
    try:
      ts = datetime.datetime.fromtimestamp(float(curr))
    except Exception as e:
      log.info(f'Error converting {curr!r} as seconds since epoch: {e!s}')

    if ts is None:
      for fmt_string in fmt_strings:
        log.debug(f'Trying {fmt_string!r}')
        try:
          ts = datetime.datetime.strptime(curr, fmt_string)
        except Exception as e:
          log.info(f'Error converting {curr!r} with format string {fmt_string!r}: {e!s}')

  table.add(
    curr,
    datetime.datetime.strftime(ts, '%a %d %b %Y %I:%M:%S %p') if ts else '', # Sun 18 Apr 2021 07:47:54 AM EDT
    ts.isoformat() if ts else '',
    (ts - epoch).total_seconds() if ts else '',
  )

print(str(table), end='')
